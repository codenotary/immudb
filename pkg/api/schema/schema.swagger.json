{
  "swagger": "2.0",
  "info": {
    "title": "immudb REST API",
    "description": "\u003cb\u003eIMPORTANT\u003c/b\u003e: All \u003ccode\u003eget\u003c/code\u003e and \u003ccode\u003esafeget\u003c/code\u003e functions return \u003cu\u003ebase64-encoded\u003c/u\u003e keys and values, while all \u003ccode\u003eset\u003c/code\u003e and \u003ccode\u003esafeset\u003c/code\u003e functions expect \u003cu\u003ebase64-encoded\u003c/u\u003e inputs.",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/immurestproxy/batch/atomic/set": {
      "post": {
        "operationId": "ImmuService_ExecAllOps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaOps"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/batch/get": {
      "post": {
        "operationId": "ImmuService_GetBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaKeyList"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/batch/set": {
      "post": {
        "operationId": "ImmuService_SetBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/immudbschemaKVList"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/changepermission": {
      "post": {
        "operationId": "ImmuService_ChangePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaChangePermissionRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/consistencyproof/{index}": {
      "get": {
        "operationId": "ImmuService_Consistency",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaConsistencyProof"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/createdatabase": {
      "post": {
        "summary": "todo(joe-dz): Enable restore when the feature is required again\n\trpc Restore(stream pb.KVList) returns (ItemsCount) {\n\t\toption (google.api.http) = {\n\t\t\tpost: \"/v1/immurestproxy/restore\"\n\t\t\tbody: \"*\"\n\t\t};\n\t}",
        "operationId": "ImmuService_CreateDatabase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaDatabase"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/dump": {
      "post": {
        "operationId": "ImmuService_Dump",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/pbKVList"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of pbKVList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/healthresponse": {
      "get": {
        "operationId": "ImmuService_Health",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/history": {
      "post": {
        "operationId": "ImmuService_History",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaHistoryOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/inclusionproof/{index}": {
      "get": {
        "operationId": "ImmuService_Inclusion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaInclusionProof"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/iscan": {
      "post": {
        "operationId": "ImmuService_IScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaPage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaIScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item": {
      "post": {
        "operationId": "ImmuService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaKeyValue"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/count/{prefix}": {
      "get": {
        "operationId": "ImmuService_Count",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemsCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "prefix",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/countall": {
      "get": {
        "operationId": "ImmuService_CountAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemsCount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/index/{index}": {
      "get": {
        "operationId": "ImmuService_ByIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe": {
      "post": {
        "operationId": "ImmuService_SafeSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeSetOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe/get": {
      "post": {
        "operationId": "ImmuService_SafeGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaSafeItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeGetOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/safe/index/{index}": {
      "get": {
        "operationId": "ImmuService_BySafeIndex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaSafeItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "rootIndex.index",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/scan": {
      "post": {
        "operationId": "ImmuService_Scan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/item/{key}": {
      "get": {
        "operationId": "ImmuService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/login": {
      "post": {
        "operationId": "ImmuService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaLoginRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/logout": {
      "post": {
        "operationId": "ImmuService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/reference": {
      "post": {
        "operationId": "ImmuService_Reference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaReferenceOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/reference/{key}": {
      "get": {
        "operationId": "ImmuService_GetReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/root": {
      "get": {
        "operationId": "ImmuService_CurrentRoot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaRoot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ImmuService"
        ],
        "security": []
      }
    },
    "/v1/immurestproxy/safe/reference": {
      "post": {
        "operationId": "ImmuService_SafeReference",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeReferenceOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/safe/zadd": {
      "post": {
        "operationId": "ImmuService_SafeZAdd",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaProof"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSafeZAddOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/usedatabase/{databasename}": {
      "get": {
        "operationId": "ImmuService_UseDatabase",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaUseDatabaseReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "databasename",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user": {
      "post": {
        "operationId": "ImmuService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaCreateUserRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/databaselist": {
      "post": {
        "operationId": "ImmuService_DatabaseList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaDatabaseListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/list": {
      "get": {
        "operationId": "ImmuService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaUserList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/password/change": {
      "post": {
        "operationId": "ImmuService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/user/setactiveUser": {
      "post": {
        "operationId": "ImmuService_SetActiveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaSetActiveUserRequest"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/zadd": {
      "post": {
        "operationId": "ImmuService_ZAdd",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaZAddOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    },
    "/v1/immurestproxy/zscan": {
      "post": {
        "operationId": "ImmuService_ZScan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/schemaZItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemaZScanOptions"
            }
          }
        ],
        "tags": [
          "ImmuService"
        ]
      }
    }
  },
  "definitions": {
    "immudbschemaKVList": {
      "type": "object",
      "properties": {
        "KVs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaKeyValue"
          }
        }
      }
    },
    "pbKV": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "user_meta": {
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "expires_at": {
          "type": "string",
          "format": "uint64"
        },
        "meta": {
          "type": "string",
          "format": "byte"
        },
        "stream_id": {
          "type": "integer",
          "format": "int64",
          "description": "Stream id is used to identify which stream the KV came from."
        },
        "stream_done": {
          "type": "boolean",
          "description": "Stream done is used to indicate end of stream."
        }
      }
    },
    "pbKVList": {
      "type": "object",
      "properties": {
        "kv": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbKV"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "schemaChangePasswordRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "oldPassword": {
          "type": "string",
          "format": "byte"
        },
        "newPassword": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaChangePermissionRequest": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/schemaPermissionAction"
        },
        "username": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "permission": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "schemaConsistencyProof": {
      "type": "object",
      "properties": {
        "i": {
          "type": "string",
          "format": "uint64"
        },
        "j": {
          "type": "string",
          "format": "uint64"
        },
        "iRoot": {
          "type": "string",
          "format": "byte"
        },
        "jRoot": {
          "type": "string",
          "format": "byte"
        },
        "terms": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "password": {
          "type": "string",
          "format": "byte"
        },
        "permission": {
          "type": "integer",
          "format": "int64"
        },
        "database": {
          "type": "string"
        }
      }
    },
    "schemaDatabase": {
      "type": "object",
      "properties": {
        "databasename": {
          "type": "string"
        }
      }
    },
    "schemaDatabaseListResponse": {
      "type": "object",
      "properties": {
        "databases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaDatabase"
          }
        }
      }
    },
    "schemaDualProof": {
      "type": "object",
      "properties": {
        "sourceTxMetadata": {
          "$ref": "#/definitions/schemaTxMetadata"
        },
        "targetTxMetadata": {
          "$ref": "#/definitions/schemaTxMetadata"
        },
        "inclusionProof": {
          "$ref": "#/definitions/schemaInclusionProof"
        },
        "consistencyProof": {
          "$ref": "#/definitions/schemaConsistencyProof"
        },
        "targetBlTxAlh": {
          "type": "string",
          "format": "byte"
        },
        "lastInclusionProof": {
          "$ref": "#/definitions/schemaInclusionProof"
        },
        "linearProof": {
          "$ref": "#/definitions/schemaLinearProof"
        }
      }
    },
    "schemaHealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "schemaHistoryOptions": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "reverse": {
          "type": "boolean"
        }
      }
    },
    "schemaIScanOptions": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "string",
          "format": "uint64"
        },
        "pageNumber": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaInclusionProof": {
      "type": "object",
      "properties": {
        "i": {
          "type": "string",
          "format": "uint64"
        },
        "j": {
          "type": "string",
          "format": "uint64"
        },
        "iLeaf": {
          "type": "string",
          "format": "byte"
        },
        "jRoot": {
          "type": "string",
          "format": "byte"
        },
        "terms": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaIndex": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaItem": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaItem"
          }
        }
      }
    },
    "schemaItemsCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaKeyList": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaKey"
          }
        }
      }
    },
    "schemaKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaLayer": {
      "type": "object",
      "properties": {
        "l": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaNode"
          }
        }
      }
    },
    "schemaLinearProof": {
      "type": "object",
      "properties": {
        "i": {
          "type": "string",
          "format": "uint64"
        },
        "j": {
          "type": "string",
          "format": "uint64"
        },
        "iAlh": {
          "type": "string",
          "format": "byte"
        },
        "jAlh": {
          "type": "string",
          "format": "byte"
        },
        "terms": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "schemaLoginRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "password": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaLoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "warning": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaNode": {
      "type": "object",
      "properties": {
        "i": {
          "type": "string",
          "format": "byte"
        },
        "h": {
          "type": "string",
          "format": "byte"
        },
        "refk": {
          "type": "string",
          "format": "byte"
        },
        "ref": {
          "type": "boolean"
        },
        "cache": {
          "type": "boolean"
        },
        "root": {
          "type": "boolean"
        }
      }
    },
    "schemaOp": {
      "type": "object",
      "properties": {
        "KVs": {
          "$ref": "#/definitions/schemaKeyValue"
        },
        "ZOpts": {
          "$ref": "#/definitions/schemaZAddOptions"
        },
        "ROpts": {
          "$ref": "#/definitions/schemaReferenceOptions"
        }
      }
    },
    "schemaOps": {
      "type": "object",
      "properties": {
        "Operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaOp"
          }
        }
      }
    },
    "schemaPage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaItem"
          }
        },
        "more": {
          "type": "boolean"
        }
      }
    },
    "schemaPermission": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "permission": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "schemaPermissionAction": {
      "type": "string",
      "enum": [
        "GRANT",
        "REVOKE"
      ],
      "default": "GRANT"
    },
    "schemaProof": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/schemaTxMetadata"
        },
        "entry": {
          "$ref": "#/definitions/schemaTxEntry"
        },
        "inclusionProof": {
          "$ref": "#/definitions/schemaInclusionProof"
        },
        "dualProof": {
          "$ref": "#/definitions/schemaDualProof"
        }
      }
    },
    "schemaReferenceOptions": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "format": "byte"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaRoot": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/schemaRootIndex"
        },
        "signature": {
          "$ref": "#/definitions/schemaSignature"
        }
      }
    },
    "schemaRootIndex": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "root": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaSafeGetOptions": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeItem": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/schemaItem"
        },
        "proof": {
          "$ref": "#/definitions/schemaProof"
        }
      }
    },
    "schemaSafeReferenceOptions": {
      "type": "object",
      "properties": {
        "ro": {
          "$ref": "#/definitions/schemaReferenceOptions"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeSetOptions": {
      "type": "object",
      "properties": {
        "kv": {
          "$ref": "#/definitions/schemaKeyValue"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaSafeZAddOptions": {
      "type": "object",
      "properties": {
        "zopts": {
          "$ref": "#/definitions/schemaZAddOptions"
        },
        "rootIndex": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaScanOptions": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "format": "byte"
        },
        "offset": {
          "type": "string",
          "format": "byte"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "reverse": {
          "type": "boolean"
        },
        "deep": {
          "type": "boolean"
        }
      }
    },
    "schemaScore": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "schemaSetActiveUserRequest": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "schemaSignature": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "format": "byte"
        },
        "publicKey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaTree": {
      "type": "object",
      "properties": {
        "t": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaLayer"
          }
        }
      }
    },
    "schemaTxEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "hValue": {
          "type": "string",
          "format": "byte"
        },
        "vOff": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "schemaTxMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "prevAlh": {
          "type": "string",
          "format": "byte"
        },
        "ts": {
          "type": "string",
          "format": "int64"
        },
        "nentries": {
          "type": "integer",
          "format": "int32"
        },
        "eH": {
          "type": "string",
          "format": "byte"
        },
        "blTxId": {
          "type": "string",
          "format": "uint64"
        },
        "blRoot": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "schemaUseDatabaseReply": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "schemaUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "format": "byte"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaPermission"
          }
        },
        "createdby": {
          "type": "string"
        },
        "createdat": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "schemaUserList": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaUser"
          }
        }
      }
    },
    "schemaZAddOptions": {
      "type": "object",
      "properties": {
        "set": {
          "type": "string",
          "format": "byte"
        },
        "score": {
          "$ref": "#/definitions/schemaScore"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "$ref": "#/definitions/schemaIndex"
        }
      }
    },
    "schemaZItem": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/schemaItem"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "currentOffset": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "schemaZItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schemaZItem"
          }
        }
      }
    },
    "schemaZScanOptions": {
      "type": "object",
      "properties": {
        "set": {
          "type": "string",
          "format": "byte"
        },
        "offset": {
          "type": "string",
          "format": "byte"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "reverse": {
          "type": "boolean"
        },
        "min": {
          "$ref": "#/definitions/schemaScore"
        },
        "max": {
          "$ref": "#/definitions/schemaScore"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
