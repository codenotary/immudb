// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema.proto

package schema

import (
	context "context"
	fmt "fmt"
	pb "github.com/dgraph-io/badger/v2/pb"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PermissionAction int32

const (
	PermissionAction_GRANT  PermissionAction = 0
	PermissionAction_REVOKE PermissionAction = 1
)

var PermissionAction_name = map[int32]string{
	0: "GRANT",
	1: "REVOKE",
}

var PermissionAction_value = map[string]int32{
	"GRANT":  0,
	"REVOKE": 1,
}

func (x PermissionAction) String() string {
	return proto.EnumName(PermissionAction_name, int32(x))
}

func (PermissionAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0}
}

type Key struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{0}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type Permission struct {
	Database             string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Permission           uint32   `protobuf:"varint,2,opt,name=permission,proto3" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{1}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *Permission) GetPermission() uint32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

type User struct {
	User                 []byte        `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Permissions          []*Permission `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Createdby            string        `protobuf:"bytes,4,opt,name=createdby,proto3" json:"createdby,omitempty"`
	Createdat            string        `protobuf:"bytes,5,opt,name=createdat,proto3" json:"createdat,omitempty"`
	Active               bool          `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *User) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *User) GetCreatedby() string {
	if m != nil {
		return m.Createdby
	}
	return ""
}

func (m *User) GetCreatedat() string {
	if m != nil {
		return m.Createdat
	}
	return ""
}

func (m *User) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type UserList struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{3}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type CreateUserRequest struct {
	User                 []byte   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password             []byte   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Permission           uint32   `protobuf:"varint,3,opt,name=permission,proto3" json:"permission,omitempty"`
	Database             string   `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{4}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateUserRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *CreateUserRequest) GetPermission() uint32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

func (m *CreateUserRequest) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

type UserRequest struct {
	User                 []byte   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{5}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

type ChangePasswordRequest struct {
	User                 []byte   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	OldPassword          []byte   `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword          []byte   `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{6}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChangePasswordRequest) GetOldPassword() []byte {
	if m != nil {
		return m.OldPassword
	}
	return nil
}

func (m *ChangePasswordRequest) GetNewPassword() []byte {
	if m != nil {
		return m.NewPassword
	}
	return nil
}

type LoginRequest struct {
	User                 []byte   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Password             []byte   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{7}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *LoginRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Warning              []byte   `protobuf:"bytes,2,opt,name=warning,proto3" json:"warning,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{8}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginResponse) GetWarning() []byte {
	if m != nil {
		return m.Warning
	}
	return nil
}

type AuthConfig struct {
	Kind                 uint32   `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthConfig) Reset()         { *m = AuthConfig{} }
func (m *AuthConfig) String() string { return proto.CompactTextString(m) }
func (*AuthConfig) ProtoMessage()    {}
func (*AuthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{9}
}

func (m *AuthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthConfig.Unmarshal(m, b)
}
func (m *AuthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthConfig.Marshal(b, m, deterministic)
}
func (m *AuthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthConfig.Merge(m, src)
}
func (m *AuthConfig) XXX_Size() int {
	return xxx_messageInfo_AuthConfig.Size(m)
}
func (m *AuthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AuthConfig proto.InternalMessageInfo

func (m *AuthConfig) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

type MTLSConfig struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTLSConfig) Reset()         { *m = MTLSConfig{} }
func (m *MTLSConfig) String() string { return proto.CompactTextString(m) }
func (*MTLSConfig) ProtoMessage()    {}
func (*MTLSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{10}
}

func (m *MTLSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTLSConfig.Unmarshal(m, b)
}
func (m *MTLSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTLSConfig.Marshal(b, m, deterministic)
}
func (m *MTLSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTLSConfig.Merge(m, src)
}
func (m *MTLSConfig) XXX_Size() int {
	return xxx_messageInfo_MTLSConfig.Size(m)
}
func (m *MTLSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MTLSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MTLSConfig proto.InternalMessageInfo

func (m *MTLSConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type Node struct {
	I                    []byte   `protobuf:"bytes,1,opt,name=i,proto3" json:"i,omitempty"`
	H                    []byte   `protobuf:"bytes,2,opt,name=h,proto3" json:"h,omitempty"`
	Refk                 []byte   `protobuf:"bytes,3,opt,name=refk,proto3" json:"refk,omitempty"`
	Ref                  bool     `protobuf:"varint,4,opt,name=ref,proto3" json:"ref,omitempty"`
	Cache                bool     `protobuf:"varint,5,opt,name=cache,proto3" json:"cache,omitempty"`
	Root                 bool     `protobuf:"varint,6,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{11}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetI() []byte {
	if m != nil {
		return m.I
	}
	return nil
}

func (m *Node) GetH() []byte {
	if m != nil {
		return m.H
	}
	return nil
}

func (m *Node) GetRefk() []byte {
	if m != nil {
		return m.Refk
	}
	return nil
}

func (m *Node) GetRef() bool {
	if m != nil {
		return m.Ref
	}
	return false
}

func (m *Node) GetCache() bool {
	if m != nil {
		return m.Cache
	}
	return false
}

func (m *Node) GetRoot() bool {
	if m != nil {
		return m.Root
	}
	return false
}

type Layer struct {
	L                    []*Node  `protobuf:"bytes,1,rep,name=l,proto3" json:"l,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Layer) Reset()         { *m = Layer{} }
func (m *Layer) String() string { return proto.CompactTextString(m) }
func (*Layer) ProtoMessage()    {}
func (*Layer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{12}
}

func (m *Layer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Layer.Unmarshal(m, b)
}
func (m *Layer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Layer.Marshal(b, m, deterministic)
}
func (m *Layer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Layer.Merge(m, src)
}
func (m *Layer) XXX_Size() int {
	return xxx_messageInfo_Layer.Size(m)
}
func (m *Layer) XXX_DiscardUnknown() {
	xxx_messageInfo_Layer.DiscardUnknown(m)
}

var xxx_messageInfo_Layer proto.InternalMessageInfo

func (m *Layer) GetL() []*Node {
	if m != nil {
		return m.L
	}
	return nil
}

type Tree struct {
	T                    []*Layer `protobuf:"bytes,1,rep,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tree) Reset()         { *m = Tree{} }
func (m *Tree) String() string { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()    {}
func (*Tree) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{13}
}

func (m *Tree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree.Unmarshal(m, b)
}
func (m *Tree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree.Marshal(b, m, deterministic)
}
func (m *Tree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree.Merge(m, src)
}
func (m *Tree) XXX_Size() int {
	return xxx_messageInfo_Tree.Size(m)
}
func (m *Tree) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree.DiscardUnknown(m)
}

var xxx_messageInfo_Tree proto.InternalMessageInfo

func (m *Tree) GetT() []*Layer {
	if m != nil {
		return m.T
	}
	return nil
}

type KeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{14}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StructuredKeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Content `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructuredKeyValue) Reset()         { *m = StructuredKeyValue{} }
func (m *StructuredKeyValue) String() string { return proto.CompactTextString(m) }
func (*StructuredKeyValue) ProtoMessage()    {}
func (*StructuredKeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{15}
}

func (m *StructuredKeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredKeyValue.Unmarshal(m, b)
}
func (m *StructuredKeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredKeyValue.Marshal(b, m, deterministic)
}
func (m *StructuredKeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredKeyValue.Merge(m, src)
}
func (m *StructuredKeyValue) XXX_Size() int {
	return xxx_messageInfo_StructuredKeyValue.Size(m)
}
func (m *StructuredKeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredKeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredKeyValue proto.InternalMessageInfo

func (m *StructuredKeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StructuredKeyValue) GetValue() *Content {
	if m != nil {
		return m.Value
	}
	return nil
}

type Content struct {
	Timestamp            uint64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}
func (*Content) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{16}
}

func (m *Content) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Content.Unmarshal(m, b)
}
func (m *Content) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Content.Marshal(b, m, deterministic)
}
func (m *Content) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Content.Merge(m, src)
}
func (m *Content) XXX_Size() int {
	return xxx_messageInfo_Content.Size(m)
}
func (m *Content) XXX_DiscardUnknown() {
	xxx_messageInfo_Content.DiscardUnknown(m)
}

var xxx_messageInfo_Content proto.InternalMessageInfo

func (m *Content) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Content) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Index struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}
func (*Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{17}
}

func (m *Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Index.Unmarshal(m, b)
}
func (m *Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Index.Marshal(b, m, deterministic)
}
func (m *Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Index.Merge(m, src)
}
func (m *Index) XXX_Size() int {
	return xxx_messageInfo_Index.Size(m)
}
func (m *Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Index proto.InternalMessageInfo

func (m *Index) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Item struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Index                uint64   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{18}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Item) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Item) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type StructuredItem struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Content `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Index                uint64   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StructuredItem) Reset()         { *m = StructuredItem{} }
func (m *StructuredItem) String() string { return proto.CompactTextString(m) }
func (*StructuredItem) ProtoMessage()    {}
func (*StructuredItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{19}
}

func (m *StructuredItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredItem.Unmarshal(m, b)
}
func (m *StructuredItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredItem.Marshal(b, m, deterministic)
}
func (m *StructuredItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredItem.Merge(m, src)
}
func (m *StructuredItem) XXX_Size() int {
	return xxx_messageInfo_StructuredItem.Size(m)
}
func (m *StructuredItem) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredItem.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredItem proto.InternalMessageInfo

func (m *StructuredItem) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StructuredItem) GetValue() *Content {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *StructuredItem) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type KVList struct {
	KVs                  []*KeyValue `protobuf:"bytes,1,rep,name=KVs,proto3" json:"KVs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *KVList) Reset()         { *m = KVList{} }
func (m *KVList) String() string { return proto.CompactTextString(m) }
func (*KVList) ProtoMessage()    {}
func (*KVList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{20}
}

func (m *KVList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVList.Unmarshal(m, b)
}
func (m *KVList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVList.Marshal(b, m, deterministic)
}
func (m *KVList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVList.Merge(m, src)
}
func (m *KVList) XXX_Size() int {
	return xxx_messageInfo_KVList.Size(m)
}
func (m *KVList) XXX_DiscardUnknown() {
	xxx_messageInfo_KVList.DiscardUnknown(m)
}

var xxx_messageInfo_KVList proto.InternalMessageInfo

func (m *KVList) GetKVs() []*KeyValue {
	if m != nil {
		return m.KVs
	}
	return nil
}

type SKVList struct {
	SKVs                 []*StructuredKeyValue `protobuf:"bytes,1,rep,name=SKVs,proto3" json:"SKVs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SKVList) Reset()         { *m = SKVList{} }
func (m *SKVList) String() string { return proto.CompactTextString(m) }
func (*SKVList) ProtoMessage()    {}
func (*SKVList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{21}
}

func (m *SKVList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SKVList.Unmarshal(m, b)
}
func (m *SKVList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SKVList.Marshal(b, m, deterministic)
}
func (m *SKVList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SKVList.Merge(m, src)
}
func (m *SKVList) XXX_Size() int {
	return xxx_messageInfo_SKVList.Size(m)
}
func (m *SKVList) XXX_DiscardUnknown() {
	xxx_messageInfo_SKVList.DiscardUnknown(m)
}

var xxx_messageInfo_SKVList proto.InternalMessageInfo

func (m *SKVList) GetSKVs() []*StructuredKeyValue {
	if m != nil {
		return m.SKVs
	}
	return nil
}

type KeyList struct {
	Keys                 []*Key   `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyList) Reset()         { *m = KeyList{} }
func (m *KeyList) String() string { return proto.CompactTextString(m) }
func (*KeyList) ProtoMessage()    {}
func (*KeyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{22}
}

func (m *KeyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyList.Unmarshal(m, b)
}
func (m *KeyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyList.Marshal(b, m, deterministic)
}
func (m *KeyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyList.Merge(m, src)
}
func (m *KeyList) XXX_Size() int {
	return xxx_messageInfo_KeyList.Size(m)
}
func (m *KeyList) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyList.DiscardUnknown(m)
}

var xxx_messageInfo_KeyList proto.InternalMessageInfo

func (m *KeyList) GetKeys() []*Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ItemList struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemList) Reset()         { *m = ItemList{} }
func (m *ItemList) String() string { return proto.CompactTextString(m) }
func (*ItemList) ProtoMessage()    {}
func (*ItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{23}
}

func (m *ItemList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemList.Unmarshal(m, b)
}
func (m *ItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemList.Marshal(b, m, deterministic)
}
func (m *ItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemList.Merge(m, src)
}
func (m *ItemList) XXX_Size() int {
	return xxx_messageInfo_ItemList.Size(m)
}
func (m *ItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemList.DiscardUnknown(m)
}

var xxx_messageInfo_ItemList proto.InternalMessageInfo

func (m *ItemList) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type StructuredItemList struct {
	Items                []*StructuredItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StructuredItemList) Reset()         { *m = StructuredItemList{} }
func (m *StructuredItemList) String() string { return proto.CompactTextString(m) }
func (*StructuredItemList) ProtoMessage()    {}
func (*StructuredItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{24}
}

func (m *StructuredItemList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StructuredItemList.Unmarshal(m, b)
}
func (m *StructuredItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StructuredItemList.Marshal(b, m, deterministic)
}
func (m *StructuredItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StructuredItemList.Merge(m, src)
}
func (m *StructuredItemList) XXX_Size() int {
	return xxx_messageInfo_StructuredItemList.Size(m)
}
func (m *StructuredItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_StructuredItemList.DiscardUnknown(m)
}

var xxx_messageInfo_StructuredItemList proto.InternalMessageInfo

func (m *StructuredItemList) GetItems() []*StructuredItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type Root struct {
	Payload              *RootIndex `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature            *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Root) Reset()         { *m = Root{} }
func (m *Root) String() string { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()    {}
func (*Root) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{25}
}

func (m *Root) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Root.Unmarshal(m, b)
}
func (m *Root) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Root.Marshal(b, m, deterministic)
}
func (m *Root) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Root.Merge(m, src)
}
func (m *Root) XXX_Size() int {
	return xxx_messageInfo_Root.Size(m)
}
func (m *Root) XXX_DiscardUnknown() {
	xxx_messageInfo_Root.DiscardUnknown(m)
}

var xxx_messageInfo_Root proto.InternalMessageInfo

func (m *Root) GetPayload() *RootIndex {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Root) GetSignature() *Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

type RootIndex struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Root                 []byte   `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootIndex) Reset()         { *m = RootIndex{} }
func (m *RootIndex) String() string { return proto.CompactTextString(m) }
func (*RootIndex) ProtoMessage()    {}
func (*RootIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{26}
}

func (m *RootIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootIndex.Unmarshal(m, b)
}
func (m *RootIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootIndex.Marshal(b, m, deterministic)
}
func (m *RootIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootIndex.Merge(m, src)
}
func (m *RootIndex) XXX_Size() int {
	return xxx_messageInfo_RootIndex.Size(m)
}
func (m *RootIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_RootIndex.DiscardUnknown(m)
}

var xxx_messageInfo_RootIndex proto.InternalMessageInfo

func (m *RootIndex) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *RootIndex) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

type Signature struct {
	Signature            []byte   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{27}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Signature) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type ScanOptions struct {
	Prefix               []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Offset               []byte   `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Reverse              bool     `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
	Deep                 bool     `protobuf:"varint,5,opt,name=deep,proto3" json:"deep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanOptions) Reset()         { *m = ScanOptions{} }
func (m *ScanOptions) String() string { return proto.CompactTextString(m) }
func (*ScanOptions) ProtoMessage()    {}
func (*ScanOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{28}
}

func (m *ScanOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanOptions.Unmarshal(m, b)
}
func (m *ScanOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanOptions.Marshal(b, m, deterministic)
}
func (m *ScanOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanOptions.Merge(m, src)
}
func (m *ScanOptions) XXX_Size() int {
	return xxx_messageInfo_ScanOptions.Size(m)
}
func (m *ScanOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ScanOptions proto.InternalMessageInfo

func (m *ScanOptions) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *ScanOptions) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *ScanOptions) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ScanOptions) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

func (m *ScanOptions) GetDeep() bool {
	if m != nil {
		return m.Deep
	}
	return false
}

type KeyPrefix struct {
	Prefix               []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPrefix) Reset()         { *m = KeyPrefix{} }
func (m *KeyPrefix) String() string { return proto.CompactTextString(m) }
func (*KeyPrefix) ProtoMessage()    {}
func (*KeyPrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{29}
}

func (m *KeyPrefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPrefix.Unmarshal(m, b)
}
func (m *KeyPrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPrefix.Marshal(b, m, deterministic)
}
func (m *KeyPrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPrefix.Merge(m, src)
}
func (m *KeyPrefix) XXX_Size() int {
	return xxx_messageInfo_KeyPrefix.Size(m)
}
func (m *KeyPrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPrefix.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPrefix proto.InternalMessageInfo

func (m *KeyPrefix) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

type ItemsCount struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemsCount) Reset()         { *m = ItemsCount{} }
func (m *ItemsCount) String() string { return proto.CompactTextString(m) }
func (*ItemsCount) ProtoMessage()    {}
func (*ItemsCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{30}
}

func (m *ItemsCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemsCount.Unmarshal(m, b)
}
func (m *ItemsCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemsCount.Marshal(b, m, deterministic)
}
func (m *ItemsCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemsCount.Merge(m, src)
}
func (m *ItemsCount) XXX_Size() int {
	return xxx_messageInfo_ItemsCount.Size(m)
}
func (m *ItemsCount) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemsCount.DiscardUnknown(m)
}

var xxx_messageInfo_ItemsCount proto.InternalMessageInfo

func (m *ItemsCount) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type InclusionProof struct {
	At                   uint64   `protobuf:"varint,1,opt,name=at,proto3" json:"at,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Root                 []byte   `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	Leaf                 []byte   `protobuf:"bytes,4,opt,name=leaf,proto3" json:"leaf,omitempty"`
	Path                 [][]byte `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InclusionProof) Reset()         { *m = InclusionProof{} }
func (m *InclusionProof) String() string { return proto.CompactTextString(m) }
func (*InclusionProof) ProtoMessage()    {}
func (*InclusionProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{31}
}

func (m *InclusionProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InclusionProof.Unmarshal(m, b)
}
func (m *InclusionProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InclusionProof.Marshal(b, m, deterministic)
}
func (m *InclusionProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InclusionProof.Merge(m, src)
}
func (m *InclusionProof) XXX_Size() int {
	return xxx_messageInfo_InclusionProof.Size(m)
}
func (m *InclusionProof) XXX_DiscardUnknown() {
	xxx_messageInfo_InclusionProof.DiscardUnknown(m)
}

var xxx_messageInfo_InclusionProof proto.InternalMessageInfo

func (m *InclusionProof) GetAt() uint64 {
	if m != nil {
		return m.At
	}
	return 0
}

func (m *InclusionProof) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *InclusionProof) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *InclusionProof) GetLeaf() []byte {
	if m != nil {
		return m.Leaf
	}
	return nil
}

func (m *InclusionProof) GetPath() [][]byte {
	if m != nil {
		return m.Path
	}
	return nil
}

type ConsistencyProof struct {
	First                uint64   `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               uint64   `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	FirstRoot            []byte   `protobuf:"bytes,3,opt,name=firstRoot,proto3" json:"firstRoot,omitempty"`
	SecondRoot           []byte   `protobuf:"bytes,4,opt,name=secondRoot,proto3" json:"secondRoot,omitempty"`
	Path                 [][]byte `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsistencyProof) Reset()         { *m = ConsistencyProof{} }
func (m *ConsistencyProof) String() string { return proto.CompactTextString(m) }
func (*ConsistencyProof) ProtoMessage()    {}
func (*ConsistencyProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{32}
}

func (m *ConsistencyProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsistencyProof.Unmarshal(m, b)
}
func (m *ConsistencyProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsistencyProof.Marshal(b, m, deterministic)
}
func (m *ConsistencyProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsistencyProof.Merge(m, src)
}
func (m *ConsistencyProof) XXX_Size() int {
	return xxx_messageInfo_ConsistencyProof.Size(m)
}
func (m *ConsistencyProof) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsistencyProof.DiscardUnknown(m)
}

var xxx_messageInfo_ConsistencyProof proto.InternalMessageInfo

func (m *ConsistencyProof) GetFirst() uint64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *ConsistencyProof) GetSecond() uint64 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *ConsistencyProof) GetFirstRoot() []byte {
	if m != nil {
		return m.FirstRoot
	}
	return nil
}

func (m *ConsistencyProof) GetSecondRoot() []byte {
	if m != nil {
		return m.SecondRoot
	}
	return nil
}

func (m *ConsistencyProof) GetPath() [][]byte {
	if m != nil {
		return m.Path
	}
	return nil
}

type Proof struct {
	Leaf                 []byte   `protobuf:"bytes,1,opt,name=leaf,proto3" json:"leaf,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Root                 []byte   `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	At                   uint64   `protobuf:"varint,4,opt,name=at,proto3" json:"at,omitempty"`
	InclusionPath        [][]byte `protobuf:"bytes,5,rep,name=inclusionPath,proto3" json:"inclusionPath,omitempty"`
	ConsistencyPath      [][]byte `protobuf:"bytes,6,rep,name=consistencyPath,proto3" json:"consistencyPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proof) Reset()         { *m = Proof{} }
func (m *Proof) String() string { return proto.CompactTextString(m) }
func (*Proof) ProtoMessage()    {}
func (*Proof) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{33}
}

func (m *Proof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proof.Unmarshal(m, b)
}
func (m *Proof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proof.Marshal(b, m, deterministic)
}
func (m *Proof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proof.Merge(m, src)
}
func (m *Proof) XXX_Size() int {
	return xxx_messageInfo_Proof.Size(m)
}
func (m *Proof) XXX_DiscardUnknown() {
	xxx_messageInfo_Proof.DiscardUnknown(m)
}

var xxx_messageInfo_Proof proto.InternalMessageInfo

func (m *Proof) GetLeaf() []byte {
	if m != nil {
		return m.Leaf
	}
	return nil
}

func (m *Proof) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Proof) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *Proof) GetAt() uint64 {
	if m != nil {
		return m.At
	}
	return 0
}

func (m *Proof) GetInclusionPath() [][]byte {
	if m != nil {
		return m.InclusionPath
	}
	return nil
}

func (m *Proof) GetConsistencyPath() [][]byte {
	if m != nil {
		return m.ConsistencyPath
	}
	return nil
}

type SafeItem struct {
	Item                 *Item    `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Proof                *Proof   `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SafeItem) Reset()         { *m = SafeItem{} }
func (m *SafeItem) String() string { return proto.CompactTextString(m) }
func (*SafeItem) ProtoMessage()    {}
func (*SafeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{34}
}

func (m *SafeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeItem.Unmarshal(m, b)
}
func (m *SafeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeItem.Marshal(b, m, deterministic)
}
func (m *SafeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeItem.Merge(m, src)
}
func (m *SafeItem) XXX_Size() int {
	return xxx_messageInfo_SafeItem.Size(m)
}
func (m *SafeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeItem.DiscardUnknown(m)
}

var xxx_messageInfo_SafeItem proto.InternalMessageInfo

func (m *SafeItem) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *SafeItem) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type SafeStructuredItem struct {
	Item                 *StructuredItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Proof                *Proof          `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SafeStructuredItem) Reset()         { *m = SafeStructuredItem{} }
func (m *SafeStructuredItem) String() string { return proto.CompactTextString(m) }
func (*SafeStructuredItem) ProtoMessage()    {}
func (*SafeStructuredItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{35}
}

func (m *SafeStructuredItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeStructuredItem.Unmarshal(m, b)
}
func (m *SafeStructuredItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeStructuredItem.Marshal(b, m, deterministic)
}
func (m *SafeStructuredItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeStructuredItem.Merge(m, src)
}
func (m *SafeStructuredItem) XXX_Size() int {
	return xxx_messageInfo_SafeStructuredItem.Size(m)
}
func (m *SafeStructuredItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeStructuredItem.DiscardUnknown(m)
}

var xxx_messageInfo_SafeStructuredItem proto.InternalMessageInfo

func (m *SafeStructuredItem) GetItem() *StructuredItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *SafeStructuredItem) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type SafeSetOptions struct {
	Kv                   *KeyValue `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
	RootIndex            *Index    `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SafeSetOptions) Reset()         { *m = SafeSetOptions{} }
func (m *SafeSetOptions) String() string { return proto.CompactTextString(m) }
func (*SafeSetOptions) ProtoMessage()    {}
func (*SafeSetOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{36}
}

func (m *SafeSetOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeSetOptions.Unmarshal(m, b)
}
func (m *SafeSetOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeSetOptions.Marshal(b, m, deterministic)
}
func (m *SafeSetOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeSetOptions.Merge(m, src)
}
func (m *SafeSetOptions) XXX_Size() int {
	return xxx_messageInfo_SafeSetOptions.Size(m)
}
func (m *SafeSetOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeSetOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeSetOptions proto.InternalMessageInfo

func (m *SafeSetOptions) GetKv() *KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *SafeSetOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type SafeSetSVOptions struct {
	Skv                  *StructuredKeyValue `protobuf:"bytes,1,opt,name=skv,proto3" json:"skv,omitempty"`
	RootIndex            *Index              `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SafeSetSVOptions) Reset()         { *m = SafeSetSVOptions{} }
func (m *SafeSetSVOptions) String() string { return proto.CompactTextString(m) }
func (*SafeSetSVOptions) ProtoMessage()    {}
func (*SafeSetSVOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{37}
}

func (m *SafeSetSVOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeSetSVOptions.Unmarshal(m, b)
}
func (m *SafeSetSVOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeSetSVOptions.Marshal(b, m, deterministic)
}
func (m *SafeSetSVOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeSetSVOptions.Merge(m, src)
}
func (m *SafeSetSVOptions) XXX_Size() int {
	return xxx_messageInfo_SafeSetSVOptions.Size(m)
}
func (m *SafeSetSVOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeSetSVOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeSetSVOptions proto.InternalMessageInfo

func (m *SafeSetSVOptions) GetSkv() *StructuredKeyValue {
	if m != nil {
		return m.Skv
	}
	return nil
}

func (m *SafeSetSVOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type SafeGetOptions struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RootIndex            *Index   `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SafeGetOptions) Reset()         { *m = SafeGetOptions{} }
func (m *SafeGetOptions) String() string { return proto.CompactTextString(m) }
func (*SafeGetOptions) ProtoMessage()    {}
func (*SafeGetOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{38}
}

func (m *SafeGetOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeGetOptions.Unmarshal(m, b)
}
func (m *SafeGetOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeGetOptions.Marshal(b, m, deterministic)
}
func (m *SafeGetOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeGetOptions.Merge(m, src)
}
func (m *SafeGetOptions) XXX_Size() int {
	return xxx_messageInfo_SafeGetOptions.Size(m)
}
func (m *SafeGetOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeGetOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeGetOptions proto.InternalMessageInfo

func (m *SafeGetOptions) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SafeGetOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type SafeReferenceOptions struct {
	Ro                   *ReferenceOptions `protobuf:"bytes,1,opt,name=ro,proto3" json:"ro,omitempty"`
	RootIndex            *Index            `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SafeReferenceOptions) Reset()         { *m = SafeReferenceOptions{} }
func (m *SafeReferenceOptions) String() string { return proto.CompactTextString(m) }
func (*SafeReferenceOptions) ProtoMessage()    {}
func (*SafeReferenceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{39}
}

func (m *SafeReferenceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeReferenceOptions.Unmarshal(m, b)
}
func (m *SafeReferenceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeReferenceOptions.Marshal(b, m, deterministic)
}
func (m *SafeReferenceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeReferenceOptions.Merge(m, src)
}
func (m *SafeReferenceOptions) XXX_Size() int {
	return xxx_messageInfo_SafeReferenceOptions.Size(m)
}
func (m *SafeReferenceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeReferenceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeReferenceOptions proto.InternalMessageInfo

func (m *SafeReferenceOptions) GetRo() *ReferenceOptions {
	if m != nil {
		return m.Ro
	}
	return nil
}

func (m *SafeReferenceOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type HealthResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{40}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *HealthResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ReferenceOptions struct {
	Reference            []byte   `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReferenceOptions) Reset()         { *m = ReferenceOptions{} }
func (m *ReferenceOptions) String() string { return proto.CompactTextString(m) }
func (*ReferenceOptions) ProtoMessage()    {}
func (*ReferenceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{41}
}

func (m *ReferenceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferenceOptions.Unmarshal(m, b)
}
func (m *ReferenceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferenceOptions.Marshal(b, m, deterministic)
}
func (m *ReferenceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferenceOptions.Merge(m, src)
}
func (m *ReferenceOptions) XXX_Size() int {
	return xxx_messageInfo_ReferenceOptions.Size(m)
}
func (m *ReferenceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferenceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReferenceOptions proto.InternalMessageInfo

func (m *ReferenceOptions) GetReference() []byte {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *ReferenceOptions) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

//
//Why use double as score type?
//Because it is not purely about the storage size, but also use cases.
//64-bit floating point double gives a lot of flexibility and dynamic range, at the expense of having only 53-bits of integer.
type ZAddOptions struct {
	Set                  []byte   `protobuf:"bytes,1,opt,name=set,proto3" json:"set,omitempty"`
	Score                float64  `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	Key                  []byte   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZAddOptions) Reset()         { *m = ZAddOptions{} }
func (m *ZAddOptions) String() string { return proto.CompactTextString(m) }
func (*ZAddOptions) ProtoMessage()    {}
func (*ZAddOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{42}
}

func (m *ZAddOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZAddOptions.Unmarshal(m, b)
}
func (m *ZAddOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZAddOptions.Marshal(b, m, deterministic)
}
func (m *ZAddOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZAddOptions.Merge(m, src)
}
func (m *ZAddOptions) XXX_Size() int {
	return xxx_messageInfo_ZAddOptions.Size(m)
}
func (m *ZAddOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ZAddOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ZAddOptions proto.InternalMessageInfo

func (m *ZAddOptions) GetSet() []byte {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *ZAddOptions) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ZAddOptions) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type ZScanOptions struct {
	Set                  []byte   `protobuf:"bytes,1,opt,name=set,proto3" json:"set,omitempty"`
	Offset               []byte   `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Reverse              bool     `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZScanOptions) Reset()         { *m = ZScanOptions{} }
func (m *ZScanOptions) String() string { return proto.CompactTextString(m) }
func (*ZScanOptions) ProtoMessage()    {}
func (*ZScanOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{43}
}

func (m *ZScanOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZScanOptions.Unmarshal(m, b)
}
func (m *ZScanOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZScanOptions.Marshal(b, m, deterministic)
}
func (m *ZScanOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZScanOptions.Merge(m, src)
}
func (m *ZScanOptions) XXX_Size() int {
	return xxx_messageInfo_ZScanOptions.Size(m)
}
func (m *ZScanOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ZScanOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ZScanOptions proto.InternalMessageInfo

func (m *ZScanOptions) GetSet() []byte {
	if m != nil {
		return m.Set
	}
	return nil
}

func (m *ZScanOptions) GetOffset() []byte {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *ZScanOptions) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ZScanOptions) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

type IScanOptions struct {
	PageSize             uint64   `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNumber           uint64   `protobuf:"varint,2,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IScanOptions) Reset()         { *m = IScanOptions{} }
func (m *IScanOptions) String() string { return proto.CompactTextString(m) }
func (*IScanOptions) ProtoMessage()    {}
func (*IScanOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{44}
}

func (m *IScanOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IScanOptions.Unmarshal(m, b)
}
func (m *IScanOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IScanOptions.Marshal(b, m, deterministic)
}
func (m *IScanOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IScanOptions.Merge(m, src)
}
func (m *IScanOptions) XXX_Size() int {
	return xxx_messageInfo_IScanOptions.Size(m)
}
func (m *IScanOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_IScanOptions.DiscardUnknown(m)
}

var xxx_messageInfo_IScanOptions proto.InternalMessageInfo

func (m *IScanOptions) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *IScanOptions) GetPageNumber() uint64 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

type Page struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	More                 bool     `protobuf:"varint,3,opt,name=more,proto3" json:"more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Page) Reset()         { *m = Page{} }
func (m *Page) String() string { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()    {}
func (*Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{45}
}

func (m *Page) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Page.Unmarshal(m, b)
}
func (m *Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Page.Marshal(b, m, deterministic)
}
func (m *Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Page.Merge(m, src)
}
func (m *Page) XXX_Size() int {
	return xxx_messageInfo_Page.Size(m)
}
func (m *Page) XXX_DiscardUnknown() {
	xxx_messageInfo_Page.DiscardUnknown(m)
}

var xxx_messageInfo_Page proto.InternalMessageInfo

func (m *Page) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Page) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type SPage struct {
	Items                []*StructuredItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	PageNum              uint64            `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	More                 bool              `protobuf:"varint,3,opt,name=more,proto3" json:"more,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SPage) Reset()         { *m = SPage{} }
func (m *SPage) String() string { return proto.CompactTextString(m) }
func (*SPage) ProtoMessage()    {}
func (*SPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{46}
}

func (m *SPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPage.Unmarshal(m, b)
}
func (m *SPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPage.Marshal(b, m, deterministic)
}
func (m *SPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPage.Merge(m, src)
}
func (m *SPage) XXX_Size() int {
	return xxx_messageInfo_SPage.Size(m)
}
func (m *SPage) XXX_DiscardUnknown() {
	xxx_messageInfo_SPage.DiscardUnknown(m)
}

var xxx_messageInfo_SPage proto.InternalMessageInfo

func (m *SPage) GetItems() []*StructuredItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SPage) GetPageNum() uint64 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *SPage) GetMore() bool {
	if m != nil {
		return m.More
	}
	return false
}

type SafeZAddOptions struct {
	Zopts                *ZAddOptions `protobuf:"bytes,1,opt,name=zopts,proto3" json:"zopts,omitempty"`
	RootIndex            *Index       `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SafeZAddOptions) Reset()         { *m = SafeZAddOptions{} }
func (m *SafeZAddOptions) String() string { return proto.CompactTextString(m) }
func (*SafeZAddOptions) ProtoMessage()    {}
func (*SafeZAddOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{47}
}

func (m *SafeZAddOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeZAddOptions.Unmarshal(m, b)
}
func (m *SafeZAddOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeZAddOptions.Marshal(b, m, deterministic)
}
func (m *SafeZAddOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeZAddOptions.Merge(m, src)
}
func (m *SafeZAddOptions) XXX_Size() int {
	return xxx_messageInfo_SafeZAddOptions.Size(m)
}
func (m *SafeZAddOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeZAddOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeZAddOptions proto.InternalMessageInfo

func (m *SafeZAddOptions) GetZopts() *ZAddOptions {
	if m != nil {
		return m.Zopts
	}
	return nil
}

func (m *SafeZAddOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type SafeIndexOptions struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	RootIndex            *Index   `protobuf:"bytes,2,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SafeIndexOptions) Reset()         { *m = SafeIndexOptions{} }
func (m *SafeIndexOptions) String() string { return proto.CompactTextString(m) }
func (*SafeIndexOptions) ProtoMessage()    {}
func (*SafeIndexOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{48}
}

func (m *SafeIndexOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafeIndexOptions.Unmarshal(m, b)
}
func (m *SafeIndexOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafeIndexOptions.Marshal(b, m, deterministic)
}
func (m *SafeIndexOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafeIndexOptions.Merge(m, src)
}
func (m *SafeIndexOptions) XXX_Size() int {
	return xxx_messageInfo_SafeIndexOptions.Size(m)
}
func (m *SafeIndexOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SafeIndexOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SafeIndexOptions proto.InternalMessageInfo

func (m *SafeIndexOptions) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SafeIndexOptions) GetRootIndex() *Index {
	if m != nil {
		return m.RootIndex
	}
	return nil
}

type Database struct {
	Databasename         string   `protobuf:"bytes,1,opt,name=databasename,proto3" json:"databasename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Database) Reset()         { *m = Database{} }
func (m *Database) String() string { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()    {}
func (*Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{49}
}

func (m *Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Database.Unmarshal(m, b)
}
func (m *Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Database.Marshal(b, m, deterministic)
}
func (m *Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Database.Merge(m, src)
}
func (m *Database) XXX_Size() int {
	return xxx_messageInfo_Database.Size(m)
}
func (m *Database) XXX_DiscardUnknown() {
	xxx_messageInfo_Database.DiscardUnknown(m)
}

var xxx_messageInfo_Database proto.InternalMessageInfo

func (m *Database) GetDatabasename() string {
	if m != nil {
		return m.Databasename
	}
	return ""
}

type UseDatabaseReply struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseDatabaseReply) Reset()         { *m = UseDatabaseReply{} }
func (m *UseDatabaseReply) String() string { return proto.CompactTextString(m) }
func (*UseDatabaseReply) ProtoMessage()    {}
func (*UseDatabaseReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{50}
}

func (m *UseDatabaseReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseDatabaseReply.Unmarshal(m, b)
}
func (m *UseDatabaseReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseDatabaseReply.Marshal(b, m, deterministic)
}
func (m *UseDatabaseReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseDatabaseReply.Merge(m, src)
}
func (m *UseDatabaseReply) XXX_Size() int {
	return xxx_messageInfo_UseDatabaseReply.Size(m)
}
func (m *UseDatabaseReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UseDatabaseReply.DiscardUnknown(m)
}

var xxx_messageInfo_UseDatabaseReply proto.InternalMessageInfo

func (m *UseDatabaseReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ChangePermissionRequest struct {
	Action               PermissionAction `protobuf:"varint,1,opt,name=action,proto3,enum=immudb.schema.PermissionAction" json:"action,omitempty"`
	Username             string           `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Database             string           `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Permission           uint32           `protobuf:"varint,4,opt,name=permission,proto3" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ChangePermissionRequest) Reset()         { *m = ChangePermissionRequest{} }
func (m *ChangePermissionRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePermissionRequest) ProtoMessage()    {}
func (*ChangePermissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{51}
}

func (m *ChangePermissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePermissionRequest.Unmarshal(m, b)
}
func (m *ChangePermissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePermissionRequest.Marshal(b, m, deterministic)
}
func (m *ChangePermissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePermissionRequest.Merge(m, src)
}
func (m *ChangePermissionRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePermissionRequest.Size(m)
}
func (m *ChangePermissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePermissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePermissionRequest proto.InternalMessageInfo

func (m *ChangePermissionRequest) GetAction() PermissionAction {
	if m != nil {
		return m.Action
	}
	return PermissionAction_GRANT
}

func (m *ChangePermissionRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ChangePermissionRequest) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *ChangePermissionRequest) GetPermission() uint32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

type SetActiveUserRequest struct {
	Active               bool     `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetActiveUserRequest) Reset()         { *m = SetActiveUserRequest{} }
func (m *SetActiveUserRequest) String() string { return proto.CompactTextString(m) }
func (*SetActiveUserRequest) ProtoMessage()    {}
func (*SetActiveUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{52}
}

func (m *SetActiveUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetActiveUserRequest.Unmarshal(m, b)
}
func (m *SetActiveUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetActiveUserRequest.Marshal(b, m, deterministic)
}
func (m *SetActiveUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetActiveUserRequest.Merge(m, src)
}
func (m *SetActiveUserRequest) XXX_Size() int {
	return xxx_messageInfo_SetActiveUserRequest.Size(m)
}
func (m *SetActiveUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetActiveUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetActiveUserRequest proto.InternalMessageInfo

func (m *SetActiveUserRequest) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *SetActiveUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type DatabaseListResponse struct {
	Databases            []*Database `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DatabaseListResponse) Reset()         { *m = DatabaseListResponse{} }
func (m *DatabaseListResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseListResponse) ProtoMessage()    {}
func (*DatabaseListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c5fb4d8cc22d66a, []int{53}
}

func (m *DatabaseListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseListResponse.Unmarshal(m, b)
}
func (m *DatabaseListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseListResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseListResponse.Merge(m, src)
}
func (m *DatabaseListResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseListResponse.Size(m)
}
func (m *DatabaseListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseListResponse proto.InternalMessageInfo

func (m *DatabaseListResponse) GetDatabases() []*Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

func init() {
	proto.RegisterEnum("immudb.schema.PermissionAction", PermissionAction_name, PermissionAction_value)
	proto.RegisterType((*Key)(nil), "immudb.schema.Key")
	proto.RegisterType((*Permission)(nil), "immudb.schema.Permission")
	proto.RegisterType((*User)(nil), "immudb.schema.User")
	proto.RegisterType((*UserList)(nil), "immudb.schema.UserList")
	proto.RegisterType((*CreateUserRequest)(nil), "immudb.schema.CreateUserRequest")
	proto.RegisterType((*UserRequest)(nil), "immudb.schema.UserRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "immudb.schema.ChangePasswordRequest")
	proto.RegisterType((*LoginRequest)(nil), "immudb.schema.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "immudb.schema.LoginResponse")
	proto.RegisterType((*AuthConfig)(nil), "immudb.schema.AuthConfig")
	proto.RegisterType((*MTLSConfig)(nil), "immudb.schema.MTLSConfig")
	proto.RegisterType((*Node)(nil), "immudb.schema.Node")
	proto.RegisterType((*Layer)(nil), "immudb.schema.Layer")
	proto.RegisterType((*Tree)(nil), "immudb.schema.Tree")
	proto.RegisterType((*KeyValue)(nil), "immudb.schema.KeyValue")
	proto.RegisterType((*StructuredKeyValue)(nil), "immudb.schema.StructuredKeyValue")
	proto.RegisterType((*Content)(nil), "immudb.schema.Content")
	proto.RegisterType((*Index)(nil), "immudb.schema.Index")
	proto.RegisterType((*Item)(nil), "immudb.schema.Item")
	proto.RegisterType((*StructuredItem)(nil), "immudb.schema.StructuredItem")
	proto.RegisterType((*KVList)(nil), "immudb.schema.KVList")
	proto.RegisterType((*SKVList)(nil), "immudb.schema.SKVList")
	proto.RegisterType((*KeyList)(nil), "immudb.schema.KeyList")
	proto.RegisterType((*ItemList)(nil), "immudb.schema.ItemList")
	proto.RegisterType((*StructuredItemList)(nil), "immudb.schema.StructuredItemList")
	proto.RegisterType((*Root)(nil), "immudb.schema.Root")
	proto.RegisterType((*RootIndex)(nil), "immudb.schema.RootIndex")
	proto.RegisterType((*Signature)(nil), "immudb.schema.Signature")
	proto.RegisterType((*ScanOptions)(nil), "immudb.schema.ScanOptions")
	proto.RegisterType((*KeyPrefix)(nil), "immudb.schema.KeyPrefix")
	proto.RegisterType((*ItemsCount)(nil), "immudb.schema.ItemsCount")
	proto.RegisterType((*InclusionProof)(nil), "immudb.schema.InclusionProof")
	proto.RegisterType((*ConsistencyProof)(nil), "immudb.schema.ConsistencyProof")
	proto.RegisterType((*Proof)(nil), "immudb.schema.Proof")
	proto.RegisterType((*SafeItem)(nil), "immudb.schema.SafeItem")
	proto.RegisterType((*SafeStructuredItem)(nil), "immudb.schema.SafeStructuredItem")
	proto.RegisterType((*SafeSetOptions)(nil), "immudb.schema.SafeSetOptions")
	proto.RegisterType((*SafeSetSVOptions)(nil), "immudb.schema.SafeSetSVOptions")
	proto.RegisterType((*SafeGetOptions)(nil), "immudb.schema.SafeGetOptions")
	proto.RegisterType((*SafeReferenceOptions)(nil), "immudb.schema.SafeReferenceOptions")
	proto.RegisterType((*HealthResponse)(nil), "immudb.schema.HealthResponse")
	proto.RegisterType((*ReferenceOptions)(nil), "immudb.schema.ReferenceOptions")
	proto.RegisterType((*ZAddOptions)(nil), "immudb.schema.ZAddOptions")
	proto.RegisterType((*ZScanOptions)(nil), "immudb.schema.ZScanOptions")
	proto.RegisterType((*IScanOptions)(nil), "immudb.schema.IScanOptions")
	proto.RegisterType((*Page)(nil), "immudb.schema.Page")
	proto.RegisterType((*SPage)(nil), "immudb.schema.SPage")
	proto.RegisterType((*SafeZAddOptions)(nil), "immudb.schema.SafeZAddOptions")
	proto.RegisterType((*SafeIndexOptions)(nil), "immudb.schema.SafeIndexOptions")
	proto.RegisterType((*Database)(nil), "immudb.schema.Database")
	proto.RegisterType((*UseDatabaseReply)(nil), "immudb.schema.UseDatabaseReply")
	proto.RegisterType((*ChangePermissionRequest)(nil), "immudb.schema.ChangePermissionRequest")
	proto.RegisterType((*SetActiveUserRequest)(nil), "immudb.schema.SetActiveUserRequest")
	proto.RegisterType((*DatabaseListResponse)(nil), "immudb.schema.DatabaseListResponse")
}

func init() {
	proto.RegisterFile("schema.proto", fileDescriptor_1c5fb4d8cc22d66a)
}

var fileDescriptor_1c5fb4d8cc22d66a = []byte{
	// 2871 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5a, 0xdd, 0x73, 0xdb, 0xc6,
	0x11, 0x17, 0xf8, 0x21, 0x91, 0x4b, 0x49, 0x51, 0xaf, 0x8e, 0xcd, 0xd0, 0x4e, 0x0c, 0x9d, 0x1c,
	0x5b, 0x56, 0x64, 0x32, 0x96, 0xe3, 0xb4, 0xe3, 0x6a, 0xd4, 0x52, 0xb2, 0x47, 0x51, 0xe4, 0x0f,
	0x0d, 0xa8, 0x28, 0x53, 0xb7, 0x99, 0x0c, 0x08, 0x1e, 0x49, 0x84, 0x24, 0x80, 0x02, 0x07, 0xc9,
	0xb4, 0xc6, 0xd3, 0x49, 0x5f, 0xfb, 0x96, 0xfe, 0x0d, 0x7d, 0x69, 0x9f, 0xfa, 0xb7, 0xf4, 0x2d,
	0xcf, 0x7d, 0xee, 0xdf, 0xd0, 0xb9, 0x0f, 0x7c, 0x10, 0x04, 0x28, 0x59, 0xd3, 0x27, 0x61, 0xef,
	0xf6, 0xf6, 0xb7, 0xb7, 0xb7, 0xb7, 0xb7, 0xbb, 0x22, 0x2c, 0x7a, 0x46, 0x9f, 0x8c, 0xf4, 0xba,
	0xe3, 0xda, 0xd4, 0x46, 0x4b, 0xe6, 0x68, 0xe4, 0x77, 0xda, 0x75, 0x31, 0x58, 0xbb, 0xd5, 0xb3,
	0xed, 0xde, 0x90, 0x34, 0x74, 0xc7, 0x6c, 0xe8, 0x96, 0x65, 0x53, 0x9d, 0x9a, 0xb6, 0xe5, 0x09,
	0xe6, 0xda, 0x4d, 0x39, 0xcb, 0xa9, 0xb6, 0xdf, 0x6d, 0x90, 0x91, 0x43, 0xc7, 0x72, 0x72, 0x93,
	0xff, 0x31, 0x1e, 0xf4, 0x88, 0xf5, 0xc0, 0x3b, 0xd3, 0x7b, 0x3d, 0xe2, 0x36, 0x6c, 0x87, 0x2f,
	0x4f, 0x11, 0x55, 0x71, 0xda, 0x0d, 0xa7, 0x2d, 0x08, 0x7c, 0x03, 0xf2, 0x87, 0x64, 0x8c, 0x56,
	0x20, 0x3f, 0x20, 0xe3, 0xaa, 0xa2, 0x2a, 0xeb, 0x8b, 0x1a, 0xfb, 0xc4, 0x5f, 0x01, 0x1c, 0x11,
	0x77, 0x64, 0x7a, 0x9e, 0x69, 0x5b, 0xa8, 0x06, 0xa5, 0x8e, 0x4e, 0xf5, 0xb6, 0xee, 0x11, 0xce,
	0x54, 0xd6, 0x42, 0x1a, 0x7d, 0x02, 0xe0, 0x84, 0x9c, 0xd5, 0x9c, 0xaa, 0xac, 0x2f, 0x69, 0xb1,
	0x11, 0xfc, 0x4f, 0x05, 0x0a, 0xdf, 0x78, 0xc4, 0x45, 0x08, 0x0a, 0xbe, 0x47, 0x5c, 0x89, 0xc2,
	0xbf, 0xd1, 0x6f, 0xa0, 0x12, 0xb1, 0x7a, 0xd5, 0xbc, 0x9a, 0x5f, 0xaf, 0x6c, 0x7d, 0x54, 0x9f,
	0x30, 0x4d, 0x3d, 0x52, 0x44, 0x8b, 0x73, 0xa3, 0x5b, 0x50, 0x36, 0x5c, 0xa2, 0x53, 0xd2, 0x69,
	0x8f, 0xab, 0x05, 0xae, 0x56, 0x34, 0x10, 0x9b, 0xd5, 0x69, 0xb5, 0x38, 0x31, 0xab, 0x53, 0x74,
	0x1d, 0xe6, 0x75, 0x83, 0x9a, 0xa7, 0xa4, 0x3a, 0xaf, 0x2a, 0xeb, 0x25, 0x4d, 0x52, 0xf8, 0x31,
	0x94, 0x98, 0xb2, 0xcf, 0x4d, 0x8f, 0xa2, 0xfb, 0x50, 0x64, 0x4a, 0x7a, 0x55, 0x85, 0xab, 0xf5,
	0xcb, 0x84, 0x5a, 0x8c, 0x4f, 0x13, 0x1c, 0xf8, 0xcf, 0xf0, 0x8b, 0x3d, 0x2e, 0x9b, 0x0f, 0x92,
	0x3f, 0xf9, 0xc4, 0xa3, 0xa9, 0x1b, 0xae, 0x41, 0xc9, 0xd1, 0x3d, 0xef, 0xcc, 0x76, 0x3b, 0xdc,
	0x56, 0x8b, 0x5a, 0x48, 0x27, 0x2c, 0x99, 0x4f, 0x5a, 0x72, 0xe2, 0x14, 0x0a, 0x93, 0xa7, 0x80,
	0x57, 0xa1, 0x72, 0x01, 0x34, 0xb6, 0xe1, 0xc3, 0xbd, 0xbe, 0x6e, 0xf5, 0xc8, 0x91, 0x04, 0x9c,
	0xa5, 0xa7, 0x0a, 0x15, 0x7b, 0xd8, 0x39, 0x9a, 0x54, 0x35, 0x3e, 0xc4, 0x38, 0x2c, 0x72, 0x16,
	0x72, 0xe4, 0x05, 0x47, 0x6c, 0x08, 0xef, 0xc0, 0xe2, 0x73, 0xbb, 0x67, 0x5a, 0x57, 0xb4, 0x07,
	0xfe, 0x2d, 0x2c, 0xc9, 0xf5, 0x9e, 0x63, 0x5b, 0x1e, 0x41, 0xd7, 0xa0, 0x48, 0xed, 0x01, 0xb1,
	0xa4, 0x0f, 0x0a, 0x02, 0x55, 0x61, 0xe1, 0x4c, 0x77, 0x2d, 0xd3, 0xea, 0x49, 0x09, 0x01, 0x89,
	0x55, 0x80, 0xa6, 0x4f, 0xfb, 0x7b, 0xb6, 0xd5, 0x35, 0x7b, 0x0c, 0x7e, 0x60, 0x5a, 0x1d, 0xbe,
	0x78, 0x49, 0xe3, 0xdf, 0xf8, 0x2e, 0xc0, 0x8b, 0xe3, 0xe7, 0x2d, 0xc9, 0x51, 0x85, 0x05, 0x62,
	0xe9, 0xed, 0x21, 0x11, 0x4c, 0x25, 0x2d, 0x20, 0xb1, 0x0b, 0x85, 0x97, 0x76, 0x87, 0xa0, 0x45,
	0x50, 0x4c, 0xa9, 0xbf, 0x62, 0x32, 0xaa, 0x2f, 0x31, 0x95, 0x3e, 0x93, 0xef, 0x92, 0xee, 0x40,
	0x5a, 0x82, 0x7f, 0xb3, 0x8b, 0xe5, 0x92, 0x2e, 0x3f, 0xad, 0x92, 0xc6, 0x3e, 0xd9, 0x1e, 0x0c,
	0xdd, 0xe8, 0x13, 0xee, 0x92, 0x25, 0x4d, 0x10, 0x7c, 0xad, 0x6d, 0x53, 0xe9, 0x8c, 0xfc, 0x1b,
	0x6f, 0x40, 0xf1, 0xb9, 0x3e, 0x26, 0x2e, 0x5a, 0x05, 0x65, 0x98, 0xe1, 0x83, 0x4c, 0x29, 0x4d,
	0x19, 0xe2, 0x0d, 0x28, 0x1c, 0xbb, 0x84, 0x20, 0x0c, 0x0a, 0x95, 0xac, 0xd7, 0x12, 0xac, 0x5c,
	0x96, 0xa6, 0x50, 0xbc, 0x05, 0xa5, 0x43, 0x32, 0x3e, 0xd1, 0x87, 0x3e, 0x99, 0xbe, 0xf8, 0x4c,
	0xbf, 0x53, 0x36, 0x25, 0xf7, 0x25, 0x08, 0x7c, 0x0c, 0xa8, 0x45, 0x5d, 0xdf, 0xa0, 0xbe, 0x4b,
	0x3a, 0x33, 0x56, 0x6f, 0xc6, 0x57, 0x57, 0xb6, 0xae, 0x27, 0x74, 0xd8, 0xb3, 0x2d, 0x4a, 0x2c,
	0x1a, 0x48, 0x6d, 0xc2, 0x82, 0x1c, 0x61, 0xb7, 0x95, 0x9a, 0x23, 0xe2, 0x51, 0x7d, 0xe4, 0x70,
	0x81, 0x05, 0x2d, 0x1a, 0x60, 0x07, 0xe3, 0xe8, 0xe3, 0xa1, 0xad, 0x07, 0x4e, 0x12, 0x90, 0xf8,
	0x63, 0x28, 0x1e, 0x58, 0x1d, 0xf2, 0x86, 0xe9, 0x6d, 0xb2, 0x0f, 0xb9, 0x58, 0x10, 0xf8, 0x29,
	0x14, 0x0e, 0x28, 0x19, 0x5d, 0x76, 0x9f, 0x91, 0x94, 0x7c, 0x5c, 0x4a, 0x17, 0x96, 0xa3, 0xdd,
	0x67, 0xc8, 0x7b, 0xaf, 0x9d, 0x67, 0xe0, 0x3c, 0x82, 0xf9, 0xc3, 0x13, 0x19, 0x7a, 0xf2, 0x87,
	0x27, 0x41, 0xe0, 0xb9, 0x91, 0x90, 0x15, 0xd8, 0x5f, 0x63, 0x3c, 0xf8, 0x77, 0xb0, 0xd0, 0x92,
	0xab, 0x1e, 0x43, 0xa1, 0x15, 0x2d, 0x5b, 0x4d, 0x2c, 0x9b, 0x3e, 0x40, 0x8d, 0xb3, 0xe3, 0x87,
	0xb0, 0x70, 0x48, 0xc6, 0x5c, 0xc2, 0x5d, 0x28, 0x0c, 0xc8, 0x38, 0x90, 0x80, 0xa6, 0x81, 0x35,
	0x3e, 0xcf, 0xc2, 0x24, 0xb3, 0x43, 0x10, 0x26, 0x4d, 0x4a, 0x46, 0x59, 0x61, 0x92, 0xf1, 0x69,
	0x82, 0x03, 0x1f, 0xc4, 0xdd, 0x28, 0x14, 0xf0, 0x68, 0x52, 0xc0, 0xc7, 0x99, 0x7a, 0xc7, 0x45,
	0xb9, 0x50, 0xd0, 0x6c, 0x9b, 0xa2, 0xad, 0xc8, 0x35, 0x14, 0x6e, 0xf9, 0x6a, 0x62, 0x39, 0xe3,
	0xe2, 0x2e, 0x12, 0x3a, 0x0d, 0xfa, 0x12, 0xca, 0x9e, 0xd9, 0xb3, 0x74, 0x26, 0x54, 0x9e, 0x57,
	0x72, 0x55, 0x2b, 0x98, 0xd7, 0x22, 0x56, 0xfc, 0x18, 0xca, 0xa1, 0xb4, 0x74, 0x87, 0x0b, 0x2f,
	0x72, 0x4e, 0x06, 0x01, 0x76, 0x91, 0xf7, 0xa1, 0x1c, 0x8a, 0x63, 0x8e, 0x1e, 0x61, 0x0b, 0xff,
	0x89, 0x06, 0xd8, 0xac, 0xe3, 0xb7, 0x87, 0xa6, 0x71, 0x48, 0xc6, 0x52, 0x46, 0x34, 0x80, 0x7f,
	0x54, 0xa0, 0xd2, 0x32, 0x74, 0xeb, 0x95, 0x78, 0xdc, 0xd9, 0x23, 0xe6, 0xb8, 0xa4, 0x6b, 0xbe,
	0x91, 0x82, 0x24, 0xc5, 0xc6, 0xed, 0x6e, 0xd7, 0x23, 0x81, 0x1a, 0x92, 0x62, 0x2a, 0x0f, 0xcd,
	0x91, 0x49, 0x03, 0xaf, 0xe3, 0x04, 0xbb, 0x5c, 0x2e, 0x39, 0x25, 0xae, 0x7c, 0x55, 0x4a, 0x5a,
	0x40, 0xb2, 0xcd, 0x74, 0x08, 0x71, 0x64, 0xa8, 0xe2, 0xdf, 0x78, 0x0d, 0xca, 0x87, 0x64, 0x7c,
	0x14, 0x02, 0xa5, 0x29, 0x80, 0x31, 0x00, 0x3b, 0x2b, 0x6f, 0xcf, 0xf6, 0x2d, 0x0e, 0x6b, 0xb0,
	0x8f, 0xc0, 0x52, 0x9c, 0xc0, 0x2e, 0x2c, 0x1f, 0x58, 0xc6, 0xd0, 0x67, 0x4f, 0xdb, 0x91, 0x6b,
	0xdb, 0x5d, 0xb4, 0x0c, 0x39, 0x3d, 0x60, 0xca, 0xe9, 0x34, 0xb2, 0x70, 0x2e, 0xcd, 0xc2, 0xf9,
	0xc8, 0xc2, 0x6c, 0x6c, 0x48, 0x74, 0x11, 0x67, 0x17, 0x35, 0xfe, 0xcd, 0xc6, 0x1c, 0x9d, 0xf6,
	0xab, 0x45, 0x35, 0xcf, 0xc6, 0xd8, 0x37, 0xfe, 0x49, 0x81, 0x95, 0x3d, 0xdb, 0xf2, 0x4c, 0x8f,
	0x12, 0xcb, 0x18, 0x0b, 0xd8, 0x6b, 0x50, 0xec, 0x9a, 0xae, 0x17, 0xaa, 0xc7, 0x09, 0xb6, 0x35,
	0x8f, 0x18, 0xb6, 0xd5, 0x91, 0xe8, 0x92, 0x62, 0x27, 0xc4, 0x19, 0xb4, 0x48, 0x87, 0x68, 0x80,
	0x3d, 0xe1, 0x82, 0x8f, 0x4f, 0x0b, 0x75, 0x62, 0x23, 0xa9, 0x4a, 0xfd, 0x5d, 0x81, 0xa2, 0xd0,
	0x24, 0xd8, 0x86, 0x12, 0xdb, 0xc6, 0xe5, 0x8d, 0x20, 0xcc, 0x57, 0x08, 0xcd, 0x77, 0x07, 0x96,
	0xcc, 0xd0, 0xc0, 0x11, 0xe8, 0xe4, 0x20, 0x5a, 0x87, 0x0f, 0x8c, 0x98, 0x45, 0x18, 0xdf, 0x3c,
	0xe7, 0x4b, 0x0e, 0xe3, 0xef, 0xa1, 0xd4, 0xd2, 0xbb, 0x84, 0xc7, 0xbf, 0x7b, 0x50, 0x60, 0xd7,
	0x50, 0x5e, 0xb9, 0xd4, 0x2b, 0xcf, 0x19, 0xd0, 0x06, 0x14, 0x1d, 0xb6, 0x37, 0x79, 0xcd, 0x92,
	0x8f, 0x12, 0xdf, 0xb7, 0x26, 0x58, 0xb0, 0x07, 0x88, 0x01, 0x24, 0x42, 0xed, 0xc3, 0x09, 0xa8,
	0x0b, 0x82, 0xc3, 0xfb, 0x83, 0x8e, 0x60, 0x99, 0x83, 0x12, 0x1a, 0xdc, 0xaa, 0x7b, 0x90, 0x1b,
	0x9c, 0x4a, 0xb8, 0xcc, 0xd0, 0x9b, 0x1b, 0x9c, 0xa2, 0x2d, 0x28, 0xbb, 0x41, 0x38, 0xc8, 0x80,
	0x12, 0x81, 0x27, 0x62, 0xc3, 0xe7, 0xb0, 0x22, 0xe1, 0x5a, 0x27, 0x01, 0xe0, 0x23, 0xc8, 0x7b,
	0x21, 0xe2, 0x25, 0xa2, 0x36, 0xe3, 0xbe, 0x12, 0xf8, 0x89, 0xd8, 0xeb, 0x7e, 0xb4, 0xd7, 0xe9,
	0x77, 0xec, 0x6a, 0x9b, 0xba, 0xc6, 0xe4, 0x6a, 0xa4, 0x4b, 0x5c, 0x62, 0x19, 0x24, 0x90, 0xde,
	0x80, 0x9c, 0x6b, 0xcb, 0x7d, 0xdd, 0x4e, 0x86, 0xe5, 0x04, 0xb3, 0x96, 0x73, 0xed, 0x2b, 0x81,
	0xef, 0xc2, 0xf2, 0x57, 0x44, 0x1f, 0xd2, 0x7e, 0x98, 0x26, 0xb2, 0xab, 0x4b, 0x75, 0xea, 0x7b,
	0x32, 0x8b, 0x93, 0x14, 0x0b, 0x74, 0x2c, 0xae, 0x05, 0x65, 0x4a, 0x59, 0x0b, 0x48, 0xbc, 0x0b,
	0x2b, 0x53, 0xca, 0xdf, 0x82, 0xb2, 0x1b, 0x8c, 0x05, 0x81, 0x3a, 0x1c, 0x08, 0x0c, 0x97, 0x8b,
	0x2a, 0xa6, 0x7d, 0xa8, 0xbc, 0x6e, 0x76, 0x3a, 0x31, 0xcb, 0xb2, 0x00, 0x2c, 0x2d, 0x2b, 0xa3,
	0xaf, 0x67, 0xd8, 0xf2, 0xc5, 0x51, 0x34, 0x41, 0x04, 0x82, 0xf2, 0x91, 0xa0, 0x3e, 0x2c, 0xbe,
	0x8e, 0x47, 0xf9, 0x69, 0x49, 0xff, 0xa7, 0xf8, 0x8e, 0xbf, 0x86, 0xc5, 0x83, 0x38, 0x12, 0x4f,
	0xc6, 0x7b, 0xa4, 0x65, 0xbe, 0x25, 0x32, 0x18, 0x86, 0x34, 0x2f, 0x4e, 0xf4, 0x1e, 0x79, 0xe9,
	0x8f, 0xda, 0xc4, 0x95, 0xc1, 0x28, 0x36, 0x82, 0x9f, 0x41, 0xe1, 0x48, 0xef, 0x91, 0xf7, 0xc8,
	0x06, 0x58, 0x10, 0x1b, 0x31, 0x7b, 0xe4, 0xc5, 0xf3, 0xc2, 0xbe, 0xf1, 0x0f, 0x50, 0x6c, 0x71,
	0x39, 0x57, 0x49, 0x0a, 0x44, 0x9e, 0xc8, 0x55, 0x92, 0x1a, 0x06, 0x64, 0x2a, 0xd6, 0x19, 0x7c,
	0xc0, 0xdc, 0x36, 0x7e, 0x6a, 0x9f, 0x43, 0xf1, 0xad, 0xed, 0x50, 0x4f, 0x3a, 0x6d, 0x2d, 0x81,
	0x1a, 0x63, 0xd5, 0x04, 0xe3, 0x95, 0x5c, 0xf6, 0x8f, 0x22, 0x08, 0x70, 0x22, 0x40, 0x4e, 0x4f,
	0x27, 0xae, 0x22, 0xbd, 0x0e, 0xa5, 0xa7, 0x41, 0x71, 0x8e, 0x61, 0x31, 0x28, 0x11, 0x2d, 0x7d,
	0x14, 0x14, 0xef, 0x13, 0x63, 0x78, 0x1d, 0x56, 0xbe, 0xf1, 0x48, 0xb0, 0x44, 0x23, 0xce, 0x70,
	0x9c, 0x5e, 0x69, 0xe1, 0x7f, 0x28, 0x70, 0x43, 0x96, 0x90, 0x51, 0x49, 0x2e, 0x8b, 0xbb, 0x5f,
	0x89, 0x82, 0xda, 0x16, 0x4b, 0x96, 0xa7, 0xee, 0x7b, 0xb4, 0xa2, 0xc9, 0xd9, 0x34, 0xc9, 0xce,
	0x9c, 0x8e, 0x55, 0x82, 0x5c, 0x3d, 0x71, 0x2d, 0x43, 0x7a, 0xa2, 0xe2, 0xcd, 0xcf, 0xec, 0x3b,
	0x14, 0xa6, 0xfa, 0x0e, 0x5f, 0xc3, 0xb5, 0x16, 0xa1, 0x4d, 0x5e, 0xd6, 0xc7, 0x4b, 0xe3, 0xa8,
	0xf2, 0x57, 0xe2, 0x95, 0xff, 0x2c, 0x3d, 0xf0, 0x0b, 0xb8, 0x16, 0xd8, 0x87, 0x65, 0xac, 0x61,
	0xa4, 0x79, 0x0c, 0xe5, 0x40, 0x9f, 0xac, 0x64, 0x3d, 0xb4, 0x6b, 0xc4, 0xb9, 0x71, 0x1f, 0x56,
	0x92, 0xe6, 0x40, 0x65, 0x28, 0xee, 0x6b, 0xcd, 0x97, 0xc7, 0x2b, 0x73, 0x08, 0x60, 0x5e, 0x7b,
	0x76, 0xf2, 0xea, 0xf0, 0xd9, 0x8a, 0xb2, 0xf5, 0xaf, 0x35, 0xa8, 0x1c, 0x8c, 0x46, 0x7e, 0x8b,
	0xb8, 0xa7, 0xa6, 0x41, 0x90, 0x0e, 0x65, 0xa6, 0x01, 0xdb, 0x90, 0x87, 0xae, 0xd7, 0x45, 0x5b,
	0xa8, 0x1e, 0xb4, 0x85, 0xea, 0xcf, 0x46, 0x0e, 0x1d, 0xd7, 0x6e, 0xa4, 0x74, 0x2a, 0xd8, 0x2a,
	0xbc, 0xf6, 0x97, 0x7f, 0xff, 0xe7, 0x6f, 0xb9, 0x8f, 0xd1, 0xcd, 0xc6, 0xe9, 0xc3, 0x06, 0xe3,
	0x71, 0x89, 0x47, 0x1d, 0xd7, 0x7e, 0x33, 0x6e, 0xb0, 0xbd, 0x36, 0x86, 0x2c, 0x1d, 0x37, 0x01,
	0xa2, 0x5e, 0x06, 0x52, 0x93, 0x85, 0x4c, 0xb2, 0xcd, 0x51, 0xcb, 0xd0, 0x02, 0xaf, 0x72, 0xb0,
	0x9b, 0xf8, 0x7a, 0x3a, 0xd8, 0x13, 0x65, 0x03, 0xfd, 0xa8, 0xc0, 0xf2, 0x64, 0x4f, 0x02, 0xdd,
	0x49, 0xe2, 0xa5, 0xb5, 0x2c, 0x32, 0x31, 0x1f, 0x72, 0xcc, 0xcf, 0xf0, 0xdd, 0x8c, 0x0d, 0x06,
	0xbd, 0x85, 0x86, 0xc1, 0xc5, 0x32, 0x1d, 0xf6, 0x61, 0xe5, 0x1b, 0xa7, 0xa3, 0x53, 0x12, 0x6b,
	0x15, 0x24, 0x3b, 0x50, 0xd1, 0x54, 0x26, 0xf2, 0x5c, 0x24, 0x28, 0xd6, 0x51, 0x48, 0x0a, 0x8a,
	0xa6, 0x66, 0x08, 0x7a, 0x02, 0xe5, 0x23, 0xd7, 0xb4, 0x28, 0xaf, 0xe8, 0xb3, 0xce, 0x38, 0x19,
	0x58, 0x19, 0x33, 0x9e, 0x43, 0x03, 0x28, 0xf2, 0x9e, 0x09, 0xba, 0x99, 0x2c, 0xff, 0x63, 0x9d,
	0x98, 0xda, 0xad, 0xf4, 0x49, 0xe1, 0xd5, 0xf8, 0xde, 0x4f, 0xcd, 0x5c, 0x7b, 0x8e, 0x5b, 0xf2,
	0x16, 0xbe, 0x31, 0x6d, 0xc9, 0x21, 0xe3, 0x66, 0xa6, 0xfb, 0x0e, 0xe6, 0x9f, 0xdb, 0x3d, 0xdb,
	0xa7, 0x99, 0x5a, 0x66, 0x6d, 0x52, 0x3a, 0x22, 0xae, 0xa6, 0x4a, 0xb7, 0x7d, 0xca, 0xc4, 0x7f,
	0x0b, 0xf9, 0x16, 0xa1, 0x28, 0x2b, 0x07, 0xab, 0xa5, 0x46, 0xc2, 0x59, 0x6e, 0xc7, 0x1e, 0x09,
	0x26, 0x78, 0x17, 0x8a, 0x3c, 0x01, 0x43, 0x17, 0x27, 0x5b, 0x19, 0x20, 0x73, 0xa8, 0x0b, 0x0b,
	0x32, 0x91, 0x43, 0x53, 0x6f, 0xd3, 0x44, 0x3e, 0x59, 0x4b, 0x4d, 0x3f, 0xf1, 0x5d, 0xae, 0xa6,
	0x8a, 0x6f, 0xa6, 0xab, 0xd9, 0xf0, 0xf4, 0x2e, 0x77, 0xcf, 0xa7, 0x50, 0x0e, 0x13, 0x46, 0x74,
	0x3b, 0x1d, 0x29, 0x4c, 0x25, 0x33, 0xb0, 0xe6, 0xd0, 0x31, 0xe4, 0xf7, 0x09, 0x45, 0x29, 0x05,
	0x7d, 0x2d, 0xed, 0x85, 0xc6, 0x77, 0xb8, 0x76, 0x9f, 0xa0, 0x5b, 0x19, 0xda, 0x9d, 0x0f, 0xc8,
	0xf8, 0x1d, 0xda, 0x86, 0xe2, 0x3e, 0xd7, 0x2b, 0x4d, 0xee, 0xec, 0x17, 0x1b, 0xcf, 0xa1, 0x91,
	0xb0, 0xe0, 0x7e, 0x86, 0x05, 0xa3, 0x2c, 0x75, 0x2a, 0x9e, 0x05, 0x65, 0x08, 0xde, 0xe0, 0x6a,
	0xde, 0xc1, 0xb7, 0x67, 0x18, 0xb1, 0xd1, 0x23, 0xdc, 0x9b, 0x5e, 0x09, 0x43, 0x0a, 0x85, 0x2f,
	0x00, 0x5c, 0x4d, 0xb3, 0x73, 0x52, 0x7f, 0x56, 0x0f, 0x11, 0xba, 0xab, 0x53, 0xa3, 0x8f, 0x3e,
	0x4c, 0x1a, 0x80, 0x37, 0x64, 0x32, 0x9c, 0x67, 0xc6, 0xd1, 0xb7, 0x99, 0xb4, 0x86, 0x27, 0x34,
	0xde, 0x06, 0x08, 0x00, 0x5a, 0x27, 0x28, 0xd9, 0x51, 0x6a, 0xcd, 0xc4, 0x98, 0x43, 0x06, 0x94,
	0xf6, 0x03, 0xf5, 0xae, 0x4f, 0x9f, 0x0f, 0x5f, 0x7b, 0x23, 0xe5, 0xec, 0xf9, 0x43, 0x71, 0xa1,
	0x8a, 0xd2, 0xa8, 0x07, 0x00, 0xfb, 0xd9, 0x2a, 0x06, 0x30, 0xab, 0x33, 0x5d, 0x81, 0x03, 0x32,
	0x7d, 0x0b, 0x2c, 0x17, 0x45, 0xc9, 0x9c, 0x2b, 0x96, 0xa0, 0x5e, 0x49, 0x5f, 0xe1, 0x08, 0x86,
	0x6e, 0x09, 0x7d, 0xe7, 0x99, 0xbc, 0xd6, 0xc9, 0x4c, 0x98, 0x4b, 0xe9, 0x3b, 0x80, 0xa2, 0x68,
	0x6f, 0x54, 0xa7, 0x77, 0x2d, 0xda, 0x23, 0xb5, 0x8f, 0x52, 0xd4, 0x15, 0x3d, 0x11, 0xfc, 0x80,
	0x2b, 0x7c, 0x0f, 0x7d, 0x9a, 0xa1, 0x30, 0xef, 0x91, 0x34, 0xce, 0x45, 0x3f, 0xe5, 0x1d, 0xea,
	0x42, 0x89, 0xaf, 0x6b, 0x0e, 0x87, 0x99, 0xb1, 0x76, 0x06, 0xda, 0x3d, 0x8e, 0xb6, 0x8a, 0x6e,
	0xcf, 0x42, 0xd3, 0x87, 0x43, 0xf4, 0x3d, 0x54, 0xf6, 0x7c, 0xd7, 0x25, 0x96, 0x68, 0x67, 0x5c,
	0xf6, 0xf1, 0x61, 0xcc, 0x78, 0x2d, 0x7a, 0x36, 0xaa, 0x28, 0x25, 0xfa, 0xf2, 0x26, 0x85, 0x0b,
	0xe5, 0xb0, 0xeb, 0x83, 0x52, 0x5d, 0x77, 0x2a, 0x70, 0x4c, 0x76, 0x89, 0xf0, 0xe7, 0x1c, 0x61,
	0x03, 0xad, 0xa7, 0xec, 0x25, 0xe0, 0xe4, 0xa5, 0x7d, 0xe3, 0x9c, 0xe7, 0xd0, 0xef, 0xd0, 0x1b,
	0xa8, 0xc4, 0x9a, 0x3e, 0x19, 0xa8, 0xb7, 0xa7, 0x1b, 0xb6, 0x13, 0x6d, 0x22, 0xbc, 0xc5, 0x71,
	0x37, 0xd1, 0xc6, 0x34, 0x6e, 0xac, 0x53, 0x32, 0x89, 0xdc, 0x86, 0x85, 0xdd, 0xb1, 0x6c, 0x17,
	0xa6, 0xa2, 0xa6, 0x06, 0xdf, 0x4d, 0x8e, 0x74, 0x17, 0xdd, 0xc9, 0x38, 0x2d, 0x2e, 0x3c, 0xc4,
	0x78, 0x0b, 0x95, 0xdd, 0x71, 0x58, 0x4e, 0xa4, 0x3e, 0x11, 0xf1, 0x42, 0x23, 0x3b, 0x98, 0xca,
	0xdc, 0x09, 0xdd, 0x9f, 0x15, 0x4c, 0x27, 0xb1, 0x77, 0xa1, 0x2c, 0xf7, 0xd7, 0x3a, 0xb9, 0xe4,
	0x69, 0xa6, 0x84, 0xd1, 0x85, 0xaf, 0x4c, 0x8f, 0xda, 0xee, 0x38, 0xf5, 0x19, 0xc9, 0xbc, 0xf2,
	0x33, 0x7c, 0xba, 0x2f, 0xe4, 0xc9, 0x57, 0xea, 0x29, 0x94, 0x25, 0x40, 0xc6, 0x4b, 0x75, 0xa9,
	0xeb, 0x6e, 0xc1, 0xbc, 0x68, 0x33, 0x64, 0x5e, 0x8a, 0xe4, 0x4e, 0x27, 0xbb, 0x12, 0xf8, 0x41,
	0x74, 0x3d, 0x30, 0x52, 0x53, 0x94, 0xe6, 0xec, 0x6e, 0x50, 0x5a, 0xfc, 0x00, 0xe5, 0xb0, 0x25,
	0x81, 0x2e, 0x6a, 0x9e, 0xbc, 0xff, 0x43, 0x13, 0x76, 0x32, 0x58, 0x54, 0x3c, 0x83, 0xa5, 0x89,
	0xfe, 0x0d, 0x5a, 0x4b, 0xf1, 0x91, 0x0b, 0x31, 0xc5, 0x35, 0xf9, 0x8c, 0x63, 0x7e, 0x8a, 0x53,
	0x76, 0xc8, 0x1d, 0x68, 0x02, 0xf8, 0x0f, 0x50, 0x60, 0x25, 0x35, 0x9a, 0x51, 0x67, 0xbf, 0x7f,
	0x96, 0xf7, 0x56, 0xef, 0x74, 0x98, 0x70, 0x1d, 0x8a, 0xbc, 0x8f, 0x32, 0x95, 0x0a, 0xbf, 0xbe,
	0xd4, 0x93, 0x82, 0xb3, 0x13, 0xe0, 0xb7, 0xc1, 0x73, 0x72, 0x08, 0x0b, 0xaf, 0xe5, 0x7b, 0x32,
	0x13, 0xe4, 0x52, 0x1e, 0xd6, 0x17, 0xfd, 0x55, 0x6e, 0x90, 0x4f, 0x52, 0x0e, 0x60, 0x96, 0x51,
	0x2e, 0xcc, 0x29, 0xb9, 0xed, 0x03, 0xcb, 0x7c, 0x07, 0xc5, 0x83, 0x54, 0xcb, 0xc4, 0xbb, 0x41,
	0x53, 0xb1, 0xe9, 0x48, 0xef, 0x91, 0x59, 0x56, 0x31, 0x03, 0xab, 0xec, 0xc0, 0xc2, 0x41, 0x86,
	0x55, 0x26, 0x00, 0x92, 0x9b, 0xe0, 0x8d, 0x1f, 0x3c, 0x87, 0x5e, 0x41, 0xe1, 0xa9, 0x3f, 0x72,
	0x32, 0x2f, 0x1a, 0xd4, 0x9d, 0xb6, 0xcc, 0xb0, 0x66, 0xf9, 0x41, 0xc7, 0x1f, 0x39, 0x4f, 0x94,
	0x8d, 0xcf, 0x15, 0x64, 0xc1, 0xb2, 0x28, 0x5b, 0xc3, 0xbe, 0x48, 0x56, 0x95, 0x9e, 0x59, 0xb0,
	0xcc, 0x70, 0xeb, 0xf0, 0x47, 0x05, 0x5c, 0x02, 0x33, 0xc0, 0x3b, 0xfe, 0xcf, 0xf8, 0x8b, 0xc1,
	0x6e, 0x4f, 0xd7, 0xe9, 0x13, 0x6d, 0x18, 0xfc, 0x05, 0x47, 0xad, 0xa3, 0xcd, 0xd4, 0x72, 0x36,
	0x80, 0x6c, 0x9c, 0xc7, 0xfb, 0x39, 0xef, 0x58, 0x55, 0xbd, 0x92, 0x6c, 0xd3, 0xa0, 0xbb, 0xe9,
	0x75, 0x75, 0xb2, 0x8f, 0x93, 0x69, 0x00, 0x99, 0xb0, 0x60, 0x9c, 0x62, 0x00, 0x2e, 0x2a, 0x6a,
	0xbd, 0x08, 0x13, 0x2c, 0x4d, 0x74, 0x5f, 0xa6, 0x43, 0x4a, 0x4a, 0x6f, 0x26, 0x13, 0xbc, 0xc1,
	0xc1, 0xef, 0xe3, 0x3b, 0x19, 0x65, 0xbd, 0x47, 0xa8, 0x1e, 0x0a, 0x63, 0xf0, 0xe7, 0xb0, 0x18,
	0x6f, 0xd8, 0x64, 0xba, 0xd2, 0x5a, 0xc6, 0xd1, 0xc4, 0xbb, 0x3c, 0xb8, 0xce, 0xd1, 0xd7, 0xf1,
	0x5a, 0x06, 0x7a, 0x60, 0xfd, 0xa1, 0xe9, 0xb1, 0xa4, 0x78, 0xf7, 0xaf, 0xf9, 0x9f, 0x9a, 0x3f,
	0xe7, 0xd0, 0x7f, 0x15, 0xf8, 0x40, 0x48, 0x57, 0xb5, 0x67, 0xad, 0x63, 0xb5, 0x79, 0x74, 0x80,
	0x7e, 0x56, 0xb6, 0xdb, 0x3b, 0x07, 0x2f, 0x8e, 0x5e, 0x69, 0xc7, 0xcd, 0x97, 0xc7, 0xdb, 0x8d,
	0xf6, 0xce, 0x13, 0xb5, 0x39, 0x1c, 0xaa, 0xdb, 0x86, 0xdd, 0x21, 0x3b, 0x3d, 0x42, 0xb7, 0x1b,
	0xfc, 0x4b, 0xd5, 0xad, 0x8e, 0x1c, 0x64, 0x37, 0x37, 0x36, 0xd1, 0xf5, 0x2d, 0xde, 0x30, 0xf2,
	0x54, 0x97, 0x50, 0xdf, 0xb5, 0xd4, 0x6d, 0x7f, 0x87, 0x81, 0x7f, 0xf9, 0xc5, 0x03, 0x62, 0x31,
	0x96, 0xce, 0x76, 0xc3, 0xdf, 0x51, 0x07, 0x64, 0xec, 0x71, 0x21, 0xfc, 0xff, 0xcd, 0xde, 0xa6,
	0x7a, 0xd6, 0x37, 0x87, 0x44, 0xd5, 0x43, 0x2c, 0x2f, 0x0b, 0xcb, 0x4b, 0xc3, 0x22, 0x6f, 0x1c,
	0x62, 0xd0, 0x0c, 0x2c, 0xd3, 0x72, 0x7c, 0xea, 0xd5, 0x5f, 0xff, 0x1e, 0xbe, 0x85, 0xf9, 0x36,
	0xd1, 0x5d, 0xe2, 0xa2, 0x17, 0xa5, 0x1c, 0xfa, 0x75, 0xd3, 0xa7, 0x7d, 0x62, 0x51, 0xd3, 0xe0,
	0x3f, 0x40, 0x52, 0x79, 0x13, 0x71, 0x53, 0x15, 0x39, 0x2d, 0xe9, 0xa8, 0xed, 0xb1, 0xba, 0xcb,
	0xb9, 0x9f, 0xc8, 0xbf, 0xea, 0x36, 0x67, 0xd9, 0xa9, 0x2d, 0xb1, 0x95, 0xb6, 0x6b, 0xbe, 0x15,
	0x0b, 0x73, 0xed, 0x45, 0x80, 0x50, 0xf4, 0xdc, 0xeb, 0xcf, 0x7a, 0x26, 0xed, 0xfb, 0xed, 0xba,
	0x61, 0x8f, 0xb8, 0xa6, 0x96, 0x4d, 0x75, 0x77, 0xdc, 0x10, 0xc6, 0x6e, 0x38, 0x83, 0x1e, 0xff,
	0x15, 0x95, 0x38, 0xd2, 0xf6, 0x3c, 0x3f, 0xf2, 0x47, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0x83, 0x8b, 0x43, 0x7e, 0x25, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImmuServiceClient is the client API for ImmuService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImmuServiceClient interface {
	ListUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserList, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateAuthConfig(ctx context.Context, in *AuthConfig, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateMTLSConfig(ctx context.Context, in *MTLSConfig, opts ...grpc.CallOption) (*empty.Empty, error)
	PrintTree(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Tree, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	Set(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Index, error)
	SetSV(ctx context.Context, in *StructuredKeyValue, opts ...grpc.CallOption) (*Index, error)
	SafeSet(ctx context.Context, in *SafeSetOptions, opts ...grpc.CallOption) (*Proof, error)
	SafeSetSV(ctx context.Context, in *SafeSetSVOptions, opts ...grpc.CallOption) (*Proof, error)
	Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Item, error)
	GetSV(ctx context.Context, in *Key, opts ...grpc.CallOption) (*StructuredItem, error)
	SafeGet(ctx context.Context, in *SafeGetOptions, opts ...grpc.CallOption) (*SafeItem, error)
	SafeGetSV(ctx context.Context, in *SafeGetOptions, opts ...grpc.CallOption) (*SafeStructuredItem, error)
	SetBatch(ctx context.Context, in *KVList, opts ...grpc.CallOption) (*Index, error)
	SetBatchSV(ctx context.Context, in *SKVList, opts ...grpc.CallOption) (*Index, error)
	GetBatch(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*ItemList, error)
	GetBatchSV(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*StructuredItemList, error)
	Scan(ctx context.Context, in *ScanOptions, opts ...grpc.CallOption) (*ItemList, error)
	ScanSV(ctx context.Context, in *ScanOptions, opts ...grpc.CallOption) (*StructuredItemList, error)
	Count(ctx context.Context, in *KeyPrefix, opts ...grpc.CallOption) (*ItemsCount, error)
	CountAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ItemsCount, error)
	CurrentRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Root, error)
	Inclusion(ctx context.Context, in *Index, opts ...grpc.CallOption) (*InclusionProof, error)
	Consistency(ctx context.Context, in *Index, opts ...grpc.CallOption) (*ConsistencyProof, error)
	ByIndex(ctx context.Context, in *Index, opts ...grpc.CallOption) (*Item, error)
	BySafeIndex(ctx context.Context, in *SafeIndexOptions, opts ...grpc.CallOption) (*SafeItem, error)
	ByIndexSV(ctx context.Context, in *Index, opts ...grpc.CallOption) (*StructuredItem, error)
	History(ctx context.Context, in *Key, opts ...grpc.CallOption) (*ItemList, error)
	HistorySV(ctx context.Context, in *Key, opts ...grpc.CallOption) (*StructuredItemList, error)
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error)
	Reference(ctx context.Context, in *ReferenceOptions, opts ...grpc.CallOption) (*Index, error)
	SafeReference(ctx context.Context, in *SafeReferenceOptions, opts ...grpc.CallOption) (*Proof, error)
	ZAdd(ctx context.Context, in *ZAddOptions, opts ...grpc.CallOption) (*Index, error)
	ZScan(ctx context.Context, in *ZScanOptions, opts ...grpc.CallOption) (*ItemList, error)
	ZScanSV(ctx context.Context, in *ZScanOptions, opts ...grpc.CallOption) (*StructuredItemList, error)
	SafeZAdd(ctx context.Context, in *SafeZAddOptions, opts ...grpc.CallOption) (*Proof, error)
	IScan(ctx context.Context, in *IScanOptions, opts ...grpc.CallOption) (*Page, error)
	IScanSV(ctx context.Context, in *IScanOptions, opts ...grpc.CallOption) (*SPage, error)
	Dump(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ImmuService_DumpClient, error)
	// todo(joe-dz): Enable restore when the feature is required again
	//	rpc Restore(stream pb.KVList) returns (ItemsCount) {
	//		option (google.api.http) = {
	//			post: "/v1/immurestproxy/restore"
	//			body: "*"
	//		};
	//	}
	CreateDatabase(ctx context.Context, in *Database, opts ...grpc.CallOption) (*empty.Empty, error)
	UseDatabase(ctx context.Context, in *Database, opts ...grpc.CallOption) (*UseDatabaseReply, error)
	ChangePermission(ctx context.Context, in *ChangePermissionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SetActiveUser(ctx context.Context, in *SetActiveUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DatabaseList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DatabaseListResponse, error)
}

type immuServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewImmuServiceClient(cc grpc.ClientConnInterface) ImmuServiceClient {
	return &immuServiceClient{cc}
}

func (c *immuServiceClient) ListUsers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserList, error) {
	out := new(UserList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) UpdateAuthConfig(ctx context.Context, in *AuthConfig, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/UpdateAuthConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) UpdateMTLSConfig(ctx context.Context, in *MTLSConfig, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/UpdateMTLSConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) PrintTree(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Tree, error) {
	out := new(Tree)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/PrintTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Logout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Set(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SetSV(ctx context.Context, in *StructuredKeyValue, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SetSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeSet(ctx context.Context, in *SafeSetOptions, opts ...grpc.CallOption) (*Proof, error) {
	out := new(Proof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeSetSV(ctx context.Context, in *SafeSetSVOptions, opts ...grpc.CallOption) (*Proof, error) {
	out := new(Proof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeSetSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) GetSV(ctx context.Context, in *Key, opts ...grpc.CallOption) (*StructuredItem, error) {
	out := new(StructuredItem)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/GetSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeGet(ctx context.Context, in *SafeGetOptions, opts ...grpc.CallOption) (*SafeItem, error) {
	out := new(SafeItem)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeGetSV(ctx context.Context, in *SafeGetOptions, opts ...grpc.CallOption) (*SafeStructuredItem, error) {
	out := new(SafeStructuredItem)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeGetSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SetBatch(ctx context.Context, in *KVList, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SetBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SetBatchSV(ctx context.Context, in *SKVList, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SetBatchSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) GetBatch(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*ItemList, error) {
	out := new(ItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/GetBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) GetBatchSV(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*StructuredItemList, error) {
	out := new(StructuredItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/GetBatchSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Scan(ctx context.Context, in *ScanOptions, opts ...grpc.CallOption) (*ItemList, error) {
	out := new(ItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ScanSV(ctx context.Context, in *ScanOptions, opts ...grpc.CallOption) (*StructuredItemList, error) {
	out := new(StructuredItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ScanSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Count(ctx context.Context, in *KeyPrefix, opts ...grpc.CallOption) (*ItemsCount, error) {
	out := new(ItemsCount)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Count", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) CountAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ItemsCount, error) {
	out := new(ItemsCount)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/CountAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) CurrentRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Root, error) {
	out := new(Root)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/CurrentRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Inclusion(ctx context.Context, in *Index, opts ...grpc.CallOption) (*InclusionProof, error) {
	out := new(InclusionProof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Inclusion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Consistency(ctx context.Context, in *Index, opts ...grpc.CallOption) (*ConsistencyProof, error) {
	out := new(ConsistencyProof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Consistency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ByIndex(ctx context.Context, in *Index, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ByIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) BySafeIndex(ctx context.Context, in *SafeIndexOptions, opts ...grpc.CallOption) (*SafeItem, error) {
	out := new(SafeItem)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/BySafeIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ByIndexSV(ctx context.Context, in *Index, opts ...grpc.CallOption) (*StructuredItem, error) {
	out := new(StructuredItem)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ByIndexSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) History(ctx context.Context, in *Key, opts ...grpc.CallOption) (*ItemList, error) {
	out := new(ItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/History", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) HistorySV(ctx context.Context, in *Key, opts ...grpc.CallOption) (*StructuredItemList, error) {
	out := new(StructuredItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/HistorySV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Reference(ctx context.Context, in *ReferenceOptions, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/Reference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeReference(ctx context.Context, in *SafeReferenceOptions, opts ...grpc.CallOption) (*Proof, error) {
	out := new(Proof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeReference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ZAdd(ctx context.Context, in *ZAddOptions, opts ...grpc.CallOption) (*Index, error) {
	out := new(Index)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ZAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ZScan(ctx context.Context, in *ZScanOptions, opts ...grpc.CallOption) (*ItemList, error) {
	out := new(ItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ZScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ZScanSV(ctx context.Context, in *ZScanOptions, opts ...grpc.CallOption) (*StructuredItemList, error) {
	out := new(StructuredItemList)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ZScanSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SafeZAdd(ctx context.Context, in *SafeZAddOptions, opts ...grpc.CallOption) (*Proof, error) {
	out := new(Proof)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SafeZAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) IScan(ctx context.Context, in *IScanOptions, opts ...grpc.CallOption) (*Page, error) {
	out := new(Page)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/IScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) IScanSV(ctx context.Context, in *IScanOptions, opts ...grpc.CallOption) (*SPage, error) {
	out := new(SPage)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/IScanSV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) Dump(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ImmuService_DumpClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ImmuService_serviceDesc.Streams[0], "/immudb.schema.ImmuService/Dump", opts...)
	if err != nil {
		return nil, err
	}
	x := &immuServiceDumpClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ImmuService_DumpClient interface {
	Recv() (*pb.KVList, error)
	grpc.ClientStream
}

type immuServiceDumpClient struct {
	grpc.ClientStream
}

func (x *immuServiceDumpClient) Recv() (*pb.KVList, error) {
	m := new(pb.KVList)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *immuServiceClient) CreateDatabase(ctx context.Context, in *Database, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/CreateDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) UseDatabase(ctx context.Context, in *Database, opts ...grpc.CallOption) (*UseDatabaseReply, error) {
	out := new(UseDatabaseReply)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/UseDatabase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) ChangePermission(ctx context.Context, in *ChangePermissionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/ChangePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) SetActiveUser(ctx context.Context, in *SetActiveUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/SetActiveUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *immuServiceClient) DatabaseList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*DatabaseListResponse, error) {
	out := new(DatabaseListResponse)
	err := c.cc.Invoke(ctx, "/immudb.schema.ImmuService/DatabaseList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImmuServiceServer is the server API for ImmuService service.
type ImmuServiceServer interface {
	ListUsers(context.Context, *empty.Empty) (*UserList, error)
	CreateUser(context.Context, *CreateUserRequest) (*empty.Empty, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*empty.Empty, error)
	UpdateAuthConfig(context.Context, *AuthConfig) (*empty.Empty, error)
	UpdateMTLSConfig(context.Context, *MTLSConfig) (*empty.Empty, error)
	PrintTree(context.Context, *empty.Empty) (*Tree, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *empty.Empty) (*empty.Empty, error)
	Set(context.Context, *KeyValue) (*Index, error)
	SetSV(context.Context, *StructuredKeyValue) (*Index, error)
	SafeSet(context.Context, *SafeSetOptions) (*Proof, error)
	SafeSetSV(context.Context, *SafeSetSVOptions) (*Proof, error)
	Get(context.Context, *Key) (*Item, error)
	GetSV(context.Context, *Key) (*StructuredItem, error)
	SafeGet(context.Context, *SafeGetOptions) (*SafeItem, error)
	SafeGetSV(context.Context, *SafeGetOptions) (*SafeStructuredItem, error)
	SetBatch(context.Context, *KVList) (*Index, error)
	SetBatchSV(context.Context, *SKVList) (*Index, error)
	GetBatch(context.Context, *KeyList) (*ItemList, error)
	GetBatchSV(context.Context, *KeyList) (*StructuredItemList, error)
	Scan(context.Context, *ScanOptions) (*ItemList, error)
	ScanSV(context.Context, *ScanOptions) (*StructuredItemList, error)
	Count(context.Context, *KeyPrefix) (*ItemsCount, error)
	CountAll(context.Context, *empty.Empty) (*ItemsCount, error)
	CurrentRoot(context.Context, *empty.Empty) (*Root, error)
	Inclusion(context.Context, *Index) (*InclusionProof, error)
	Consistency(context.Context, *Index) (*ConsistencyProof, error)
	ByIndex(context.Context, *Index) (*Item, error)
	BySafeIndex(context.Context, *SafeIndexOptions) (*SafeItem, error)
	ByIndexSV(context.Context, *Index) (*StructuredItem, error)
	History(context.Context, *Key) (*ItemList, error)
	HistorySV(context.Context, *Key) (*StructuredItemList, error)
	Health(context.Context, *empty.Empty) (*HealthResponse, error)
	Reference(context.Context, *ReferenceOptions) (*Index, error)
	SafeReference(context.Context, *SafeReferenceOptions) (*Proof, error)
	ZAdd(context.Context, *ZAddOptions) (*Index, error)
	ZScan(context.Context, *ZScanOptions) (*ItemList, error)
	ZScanSV(context.Context, *ZScanOptions) (*StructuredItemList, error)
	SafeZAdd(context.Context, *SafeZAddOptions) (*Proof, error)
	IScan(context.Context, *IScanOptions) (*Page, error)
	IScanSV(context.Context, *IScanOptions) (*SPage, error)
	Dump(*empty.Empty, ImmuService_DumpServer) error
	// todo(joe-dz): Enable restore when the feature is required again
	//	rpc Restore(stream pb.KVList) returns (ItemsCount) {
	//		option (google.api.http) = {
	//			post: "/v1/immurestproxy/restore"
	//			body: "*"
	//		};
	//	}
	CreateDatabase(context.Context, *Database) (*empty.Empty, error)
	UseDatabase(context.Context, *Database) (*UseDatabaseReply, error)
	ChangePermission(context.Context, *ChangePermissionRequest) (*empty.Empty, error)
	SetActiveUser(context.Context, *SetActiveUserRequest) (*empty.Empty, error)
	DatabaseList(context.Context, *empty.Empty) (*DatabaseListResponse, error)
}

// UnimplementedImmuServiceServer can be embedded to have forward compatible implementations.
type UnimplementedImmuServiceServer struct {
}

func (*UnimplementedImmuServiceServer) ListUsers(ctx context.Context, req *empty.Empty) (*UserList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedImmuServiceServer) CreateUser(ctx context.Context, req *CreateUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedImmuServiceServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedImmuServiceServer) UpdateAuthConfig(ctx context.Context, req *AuthConfig) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthConfig not implemented")
}
func (*UnimplementedImmuServiceServer) UpdateMTLSConfig(ctx context.Context, req *MTLSConfig) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMTLSConfig not implemented")
}
func (*UnimplementedImmuServiceServer) PrintTree(ctx context.Context, req *empty.Empty) (*Tree, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrintTree not implemented")
}
func (*UnimplementedImmuServiceServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedImmuServiceServer) Logout(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedImmuServiceServer) Set(ctx context.Context, req *KeyValue) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedImmuServiceServer) SetSV(ctx context.Context, req *StructuredKeyValue) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSV not implemented")
}
func (*UnimplementedImmuServiceServer) SafeSet(ctx context.Context, req *SafeSetOptions) (*Proof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeSet not implemented")
}
func (*UnimplementedImmuServiceServer) SafeSetSV(ctx context.Context, req *SafeSetSVOptions) (*Proof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeSetSV not implemented")
}
func (*UnimplementedImmuServiceServer) Get(ctx context.Context, req *Key) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedImmuServiceServer) GetSV(ctx context.Context, req *Key) (*StructuredItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSV not implemented")
}
func (*UnimplementedImmuServiceServer) SafeGet(ctx context.Context, req *SafeGetOptions) (*SafeItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeGet not implemented")
}
func (*UnimplementedImmuServiceServer) SafeGetSV(ctx context.Context, req *SafeGetOptions) (*SafeStructuredItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeGetSV not implemented")
}
func (*UnimplementedImmuServiceServer) SetBatch(ctx context.Context, req *KVList) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBatch not implemented")
}
func (*UnimplementedImmuServiceServer) SetBatchSV(ctx context.Context, req *SKVList) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBatchSV not implemented")
}
func (*UnimplementedImmuServiceServer) GetBatch(ctx context.Context, req *KeyList) (*ItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatch not implemented")
}
func (*UnimplementedImmuServiceServer) GetBatchSV(ctx context.Context, req *KeyList) (*StructuredItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatchSV not implemented")
}
func (*UnimplementedImmuServiceServer) Scan(ctx context.Context, req *ScanOptions) (*ItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scan not implemented")
}
func (*UnimplementedImmuServiceServer) ScanSV(ctx context.Context, req *ScanOptions) (*StructuredItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScanSV not implemented")
}
func (*UnimplementedImmuServiceServer) Count(ctx context.Context, req *KeyPrefix) (*ItemsCount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Count not implemented")
}
func (*UnimplementedImmuServiceServer) CountAll(ctx context.Context, req *empty.Empty) (*ItemsCount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAll not implemented")
}
func (*UnimplementedImmuServiceServer) CurrentRoot(ctx context.Context, req *empty.Empty) (*Root, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CurrentRoot not implemented")
}
func (*UnimplementedImmuServiceServer) Inclusion(ctx context.Context, req *Index) (*InclusionProof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Inclusion not implemented")
}
func (*UnimplementedImmuServiceServer) Consistency(ctx context.Context, req *Index) (*ConsistencyProof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Consistency not implemented")
}
func (*UnimplementedImmuServiceServer) ByIndex(ctx context.Context, req *Index) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByIndex not implemented")
}
func (*UnimplementedImmuServiceServer) BySafeIndex(ctx context.Context, req *SafeIndexOptions) (*SafeItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BySafeIndex not implemented")
}
func (*UnimplementedImmuServiceServer) ByIndexSV(ctx context.Context, req *Index) (*StructuredItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByIndexSV not implemented")
}
func (*UnimplementedImmuServiceServer) History(ctx context.Context, req *Key) (*ItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method History not implemented")
}
func (*UnimplementedImmuServiceServer) HistorySV(ctx context.Context, req *Key) (*StructuredItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HistorySV not implemented")
}
func (*UnimplementedImmuServiceServer) Health(ctx context.Context, req *empty.Empty) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedImmuServiceServer) Reference(ctx context.Context, req *ReferenceOptions) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reference not implemented")
}
func (*UnimplementedImmuServiceServer) SafeReference(ctx context.Context, req *SafeReferenceOptions) (*Proof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeReference not implemented")
}
func (*UnimplementedImmuServiceServer) ZAdd(ctx context.Context, req *ZAddOptions) (*Index, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ZAdd not implemented")
}
func (*UnimplementedImmuServiceServer) ZScan(ctx context.Context, req *ZScanOptions) (*ItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ZScan not implemented")
}
func (*UnimplementedImmuServiceServer) ZScanSV(ctx context.Context, req *ZScanOptions) (*StructuredItemList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ZScanSV not implemented")
}
func (*UnimplementedImmuServiceServer) SafeZAdd(ctx context.Context, req *SafeZAddOptions) (*Proof, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SafeZAdd not implemented")
}
func (*UnimplementedImmuServiceServer) IScan(ctx context.Context, req *IScanOptions) (*Page, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IScan not implemented")
}
func (*UnimplementedImmuServiceServer) IScanSV(ctx context.Context, req *IScanOptions) (*SPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IScanSV not implemented")
}
func (*UnimplementedImmuServiceServer) Dump(req *empty.Empty, srv ImmuService_DumpServer) error {
	return status.Errorf(codes.Unimplemented, "method Dump not implemented")
}
func (*UnimplementedImmuServiceServer) CreateDatabase(ctx context.Context, req *Database) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDatabase not implemented")
}
func (*UnimplementedImmuServiceServer) UseDatabase(ctx context.Context, req *Database) (*UseDatabaseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseDatabase not implemented")
}
func (*UnimplementedImmuServiceServer) ChangePermission(ctx context.Context, req *ChangePermissionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePermission not implemented")
}
func (*UnimplementedImmuServiceServer) SetActiveUser(ctx context.Context, req *SetActiveUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetActiveUser not implemented")
}
func (*UnimplementedImmuServiceServer) DatabaseList(ctx context.Context, req *empty.Empty) (*DatabaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DatabaseList not implemented")
}

func RegisterImmuServiceServer(s *grpc.Server, srv ImmuServiceServer) {
	s.RegisterService(&_ImmuService_serviceDesc, srv)
}

func _ImmuService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ListUsers(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_UpdateAuthConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).UpdateAuthConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/UpdateAuthConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).UpdateAuthConfig(ctx, req.(*AuthConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_UpdateMTLSConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MTLSConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).UpdateMTLSConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/UpdateMTLSConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).UpdateMTLSConfig(ctx, req.(*MTLSConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_PrintTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).PrintTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/PrintTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).PrintTree(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Logout(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Set(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SetSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StructuredKeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SetSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SetSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SetSV(ctx, req.(*StructuredKeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeSetOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeSet(ctx, req.(*SafeSetOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeSetSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeSetSVOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeSetSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeSetSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeSetSV(ctx, req.(*SafeSetSVOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Get(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_GetSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).GetSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/GetSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).GetSV(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeGetOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeGet(ctx, req.(*SafeGetOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeGetSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeGetOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeGetSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeGetSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeGetSV(ctx, req.(*SafeGetOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SetBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KVList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SetBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SetBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SetBatch(ctx, req.(*KVList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SetBatchSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SKVList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SetBatchSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SetBatchSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SetBatchSV(ctx, req.(*SKVList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_GetBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).GetBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/GetBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).GetBatch(ctx, req.(*KeyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_GetBatchSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).GetBatchSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/GetBatchSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).GetBatchSV(ctx, req.(*KeyList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Scan(ctx, req.(*ScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ScanSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ScanSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ScanSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ScanSV(ctx, req.(*ScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Count_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyPrefix)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Count(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Count",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Count(ctx, req.(*KeyPrefix))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_CountAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).CountAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/CountAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).CountAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_CurrentRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).CurrentRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/CurrentRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).CurrentRoot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Inclusion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Index)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Inclusion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Inclusion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Inclusion(ctx, req.(*Index))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Consistency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Index)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Consistency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Consistency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Consistency(ctx, req.(*Index))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ByIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Index)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ByIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ByIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ByIndex(ctx, req.(*Index))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_BySafeIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeIndexOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).BySafeIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/BySafeIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).BySafeIndex(ctx, req.(*SafeIndexOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ByIndexSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Index)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ByIndexSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ByIndexSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ByIndexSV(ctx, req.(*Index))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_History_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).History(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/History",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).History(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_HistorySV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).HistorySV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/HistorySV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).HistorySV(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Reference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReferenceOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).Reference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/Reference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).Reference(ctx, req.(*ReferenceOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeReferenceOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeReference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeReference(ctx, req.(*SafeReferenceOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ZAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZAddOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ZAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ZAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ZAdd(ctx, req.(*ZAddOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ZScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ZScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ZScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ZScan(ctx, req.(*ZScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ZScanSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ZScanSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ZScanSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ZScanSV(ctx, req.(*ZScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SafeZAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SafeZAddOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SafeZAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SafeZAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SafeZAdd(ctx, req.(*SafeZAddOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_IScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).IScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/IScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).IScan(ctx, req.(*IScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_IScanSV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IScanOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).IScanSV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/IScanSV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).IScanSV(ctx, req.(*IScanOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_Dump_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ImmuServiceServer).Dump(m, &immuServiceDumpServer{stream})
}

type ImmuService_DumpServer interface {
	Send(*pb.KVList) error
	grpc.ServerStream
}

type immuServiceDumpServer struct {
	grpc.ServerStream
}

func (x *immuServiceDumpServer) Send(m *pb.KVList) error {
	return x.ServerStream.SendMsg(m)
}

func _ImmuService_CreateDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Database)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).CreateDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/CreateDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).CreateDatabase(ctx, req.(*Database))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_UseDatabase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Database)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).UseDatabase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/UseDatabase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).UseDatabase(ctx, req.(*Database))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_ChangePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).ChangePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/ChangePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).ChangePermission(ctx, req.(*ChangePermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_SetActiveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetActiveUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).SetActiveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/SetActiveUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).SetActiveUser(ctx, req.(*SetActiveUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ImmuService_DatabaseList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImmuServiceServer).DatabaseList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/immudb.schema.ImmuService/DatabaseList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImmuServiceServer).DatabaseList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImmuService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "immudb.schema.ImmuService",
	HandlerType: (*ImmuServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUsers",
			Handler:    _ImmuService_ListUsers_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _ImmuService_CreateUser_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _ImmuService_ChangePassword_Handler,
		},
		{
			MethodName: "UpdateAuthConfig",
			Handler:    _ImmuService_UpdateAuthConfig_Handler,
		},
		{
			MethodName: "UpdateMTLSConfig",
			Handler:    _ImmuService_UpdateMTLSConfig_Handler,
		},
		{
			MethodName: "PrintTree",
			Handler:    _ImmuService_PrintTree_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _ImmuService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _ImmuService_Logout_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _ImmuService_Set_Handler,
		},
		{
			MethodName: "SetSV",
			Handler:    _ImmuService_SetSV_Handler,
		},
		{
			MethodName: "SafeSet",
			Handler:    _ImmuService_SafeSet_Handler,
		},
		{
			MethodName: "SafeSetSV",
			Handler:    _ImmuService_SafeSetSV_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ImmuService_Get_Handler,
		},
		{
			MethodName: "GetSV",
			Handler:    _ImmuService_GetSV_Handler,
		},
		{
			MethodName: "SafeGet",
			Handler:    _ImmuService_SafeGet_Handler,
		},
		{
			MethodName: "SafeGetSV",
			Handler:    _ImmuService_SafeGetSV_Handler,
		},
		{
			MethodName: "SetBatch",
			Handler:    _ImmuService_SetBatch_Handler,
		},
		{
			MethodName: "SetBatchSV",
			Handler:    _ImmuService_SetBatchSV_Handler,
		},
		{
			MethodName: "GetBatch",
			Handler:    _ImmuService_GetBatch_Handler,
		},
		{
			MethodName: "GetBatchSV",
			Handler:    _ImmuService_GetBatchSV_Handler,
		},
		{
			MethodName: "Scan",
			Handler:    _ImmuService_Scan_Handler,
		},
		{
			MethodName: "ScanSV",
			Handler:    _ImmuService_ScanSV_Handler,
		},
		{
			MethodName: "Count",
			Handler:    _ImmuService_Count_Handler,
		},
		{
			MethodName: "CountAll",
			Handler:    _ImmuService_CountAll_Handler,
		},
		{
			MethodName: "CurrentRoot",
			Handler:    _ImmuService_CurrentRoot_Handler,
		},
		{
			MethodName: "Inclusion",
			Handler:    _ImmuService_Inclusion_Handler,
		},
		{
			MethodName: "Consistency",
			Handler:    _ImmuService_Consistency_Handler,
		},
		{
			MethodName: "ByIndex",
			Handler:    _ImmuService_ByIndex_Handler,
		},
		{
			MethodName: "BySafeIndex",
			Handler:    _ImmuService_BySafeIndex_Handler,
		},
		{
			MethodName: "ByIndexSV",
			Handler:    _ImmuService_ByIndexSV_Handler,
		},
		{
			MethodName: "History",
			Handler:    _ImmuService_History_Handler,
		},
		{
			MethodName: "HistorySV",
			Handler:    _ImmuService_HistorySV_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _ImmuService_Health_Handler,
		},
		{
			MethodName: "Reference",
			Handler:    _ImmuService_Reference_Handler,
		},
		{
			MethodName: "SafeReference",
			Handler:    _ImmuService_SafeReference_Handler,
		},
		{
			MethodName: "ZAdd",
			Handler:    _ImmuService_ZAdd_Handler,
		},
		{
			MethodName: "ZScan",
			Handler:    _ImmuService_ZScan_Handler,
		},
		{
			MethodName: "ZScanSV",
			Handler:    _ImmuService_ZScanSV_Handler,
		},
		{
			MethodName: "SafeZAdd",
			Handler:    _ImmuService_SafeZAdd_Handler,
		},
		{
			MethodName: "IScan",
			Handler:    _ImmuService_IScan_Handler,
		},
		{
			MethodName: "IScanSV",
			Handler:    _ImmuService_IScanSV_Handler,
		},
		{
			MethodName: "CreateDatabase",
			Handler:    _ImmuService_CreateDatabase_Handler,
		},
		{
			MethodName: "UseDatabase",
			Handler:    _ImmuService_UseDatabase_Handler,
		},
		{
			MethodName: "ChangePermission",
			Handler:    _ImmuService_ChangePermission_Handler,
		},
		{
			MethodName: "SetActiveUser",
			Handler:    _ImmuService_SetActiveUser_Handler,
		},
		{
			MethodName: "DatabaseList",
			Handler:    _ImmuService_DatabaseList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Dump",
			Handler:       _ImmuService_Dump_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "schema.proto",
}
