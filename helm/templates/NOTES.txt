{{- if .Values.ingress.enabled }}
The web interface is at this address:
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ .Values.ingress.hostname }}/
  
You can also access immudb web console and grpc interface by running these commands
{{- else }}
You can access immudb web console and grpc interface by running these commands
{{- end }}

{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT0=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "immudb.fullname" . }}-http)
  export NODE_PORT1=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "immudb.fullname" . }}-grpc)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT0
  echo immuclient -a $NODE_IP -p $NODE_PORT1
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w -l app.kubernetes.io/name={{ include "immudb.name" . }}'
  export SERVICE_IP0=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "immudb.fullname" . }}-http --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  export SERVICE_IP1=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "immudb.fullname" . }}-grpc --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo Visit: http://$SERVICE_IP0:{{ .Values.service.ports.http }}
  echo immuclient -a $SERVICE_IP1 -p {{ .Values.service.ports.grpc }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "immudb.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT0=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  export CONTAINER_PORT1=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[1].containerPort}")
  echo "Visit http://127.0.0.1:8080 to access immudb web interface"
  echo "You can use grpc interface, connecting immuclient to localhost, port 3322"
  echo "immuclient -a 127.0.0.1 -p 3322"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT0 3322:$CONTAINER_PORT1

{{- end }}

Any feedback (suggestion, corrections, bug reports) is appreciated! 
