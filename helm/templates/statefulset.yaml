apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "immudb.fullname" . }}
  labels:
    {{- include "immudb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "immudb.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "immudb.fullname" . }}    
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "immudb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: immudb-storage
        persistentVolumeClaim:
          claimName: immudb-claim
      - name: conf
        emptyDir: { }
      - name: scripts
        emptyDir: { }
      - name: config-map
        configMap:
          name: immudb
      initContainers:
        - name: init-immudb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - bash
            - "-c"
            - |
              set -ex
              # Generate immudb server-id from pod ordinal index.
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              if [[ $ordinal -eq 0 ]]; then
                cp /mnt/config-map/primary.cnf /mnt/configs/immudb.toml
              else
                cp /mnt/config-map/replica.cnf /mnt/configs/immudb.toml
              fi
          volumeMounts:
          - name: conf
            mountPath: /mnt/configs
            subPath: immudb.toml
          - name: config-map
            mountPath: /mnt/config-map
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ "immudb","--config","/mnt/configs/immudb.toml" ]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 3322
              protocol: TCP
            - name: metrics
              containerPort: 9497
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /readyz
              port: metrics
            failureThreshold: 9
          readinessProbe:
            httpGet:
              path: /readyz
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/immudb
              name: immudb-storage
            - name: immudb-storage
              mountPath: /data/master
            - name: immudb-storage
              mountPath: /data/replica
            - name: conf
              mountPath: /mnt/configs
              subPath: immudb.toml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}