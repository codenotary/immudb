name: pullCI

on: [pull_request]

jobs:
  build:
    name: build
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, go: 1.13, immudb: "immudb", immuclient: "immuclient"}
          - {os: windows-latest, go: 1.15, immudb: "immudb.exe", immuclient: "immuclient.exe"}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@v1
      - name: Test
        run: make test
        if: runner.os == 'Linux'
      - name: Test Client
        run: make test-client
        if: runner.os == 'Windows'
        shell: bash
      - name: build all
        run: make all
      - name: Build with webconsole
        run: |
          sudo apt update && sudo apt install curl -y
          curl -L  https://github.com/codenotary/immudb-webconsole/releases/download/v0.0.7/immudb-webconsole.tar.gz | tar -xzv -C webconsole
          WEBCONSOLE=1 make all
        if: runner.os == 'Linux'
      - name: Upload webconsole artifact
        uses: actions/upload-artifact@v2
        with:
          name: immu-${{matrix.os}}-webconsole
          path: |
            ${{github.workspace}}/${{matrix.immudb}}
            ${{github.workspace}}/${{matrix.immuclient}}
        if: runner.os == 'Linux'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: immu-${{matrix.os}}
          path: |
            ${{github.workspace}}/${{matrix.immudb}}
            ${{github.workspace}}/${{matrix.immuclient}}
  
  test:
    name: Smoke tests (no webconsole)
    needs: build
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, go: 1.13, immudb: "immudb", immuclient: "immuclient"}
          - {os: windows-latest, go: 1.15, immudb: "immudb.exe", immuclient: "immuclient.exe"}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/download-artifact@v2
        with: 
          name: immu-${{matrix.os}}
          path: ${{github.workspace}}/bin
      - name: Make binaries executable
        run: |
          chmod +x ${GITHUB_WORKSPACE}/bin/*
        shell: bash
        if: runner.os == 'Linux'
      - name: Testing immudb operations
        run: |
          export PATH=$PATH:${GITHUB_WORKSPACE}/bin
          # Run immuclient before a server starts, make sure it fails
          ${{matrix.immuclient}} || echo "Test #1 OK - immuclient failed to connect (no server started)"
          ${{matrix.immudb}} -d
          ${{matrix.immuclient}} login --username immudb --password immudb || echo "Test #2 Login (Default credentials) Failed"
          ${{matrix.immuclient}} safeset test3 githubaction || echo "Test #3 Failed to safeset simple values"
          sg=$(${{matrix.immuclient}} safeget test3)
          test [[ "$sg" == *"githubaction"*]] || echo "Test #4 Failed safeget responded with $sg"
          test [[ "$sg" == *"verified: true"*]] || echo "Test #5 Failed safeset didn't get verified"

  test-webconsole:
    name: Smoke tests (webconsole bundled)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with: 
          name: immu-${{matrix.os}}
          path: ${{github.workspace}}/bin
      - name: Make binaries executable
        run: |
          chmod +x ${GITHUB_WORKSPACE}/bin/*
        shell: bash
        if: runner.os == 'Linux'
      - name: Testing immudb operations
        run: |
          sudo apt update && sudo apt install curl -y
          export PATH=$PATH:${GITHUB_WORKSPACE}/bin
          # Run immuclient before a server starts, make sure it fails
          immuclient || echo "Test #1 OK - immuclient failed to connect (no server started)"
          immudb -d
          immuclient login --username immudb --password immudb || echo "Test #2 Login (Default credentials) Failed"
          immuclient safeset test3 githubaction || echo "Test #3 Failed to safeset simple values"
          immuclient safeget test3)
          test [[ "$sg" == *"githubaction"*]] || echo "Test #4 Failed safeget responded with $sg"
          test [[ "$sg" == *"verified: true"*]] || echo "Test #5 Failed safeset didn't get verified"
          # Find <title>immudb webconsole</title>
          webconsole_page=$(curl -s localhost:8080) || echo "Test #6 web console unreachable"
          grep -q "<title>immudb webconsole</title>" <<< $webconsole_page || echo "Test #7 Failed, web console reachable but title not found"

  coveralls:
    name: Coverage
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - uses: actions/checkout@v1
      - run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go get golang.org/x/tools/cmd/cover
          go get -u github.com/mattn/goveralls
          go get -u github.com/ory/go-acc
          set -o pipefail
          go-acc ./... --covermode=atomic --ignore test,immuclient,immuadmin,helper,cmdtest,sservice,version,tools || true
          cat coverage.txt | grep -v "schema.pb" | grep -v "immuclient" | grep -v "immuadmin" | grep -v "helper" | grep -v "cmdtest" | grep -v "sservice" | grep -v "version" | grep -v "tools" > coverage.out
          goveralls -coverprofile=coverage.out -service=gh-ci -repotoken ${{ secrets.COVERALLS_TOKEN }}
